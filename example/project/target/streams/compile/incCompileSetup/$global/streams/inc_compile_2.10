format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes
compile options:
1 items
0 -> -deprecation
javac options:
0 items
compiler version:
1 items
0 -> 2.10.6
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
166 items
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\Challenge$.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\Challenge.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anon$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anon$2.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$2.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$executeRequest$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$executeRequest$2.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$executeRequest$3.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$executeRequest$4.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$extractJson$1$$anonfun$apply$6.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$extractJson$1$$anonfun$liftedTree2$1$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$extractJson$1$$anonfun$liftedTree2$1$2.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$extractJson$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$fullExceptionString$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$getChallenge$1$$anonfun$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$getChallenge$1$$anonfun$apply$2.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$getChallenge$1$$anonfun$apply$3.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$getChallenge$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$liftedTree1$1$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$liftedTree1$1$2.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$liftedTree1$1$3.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitGrade$1$$anonfun$apply$7.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitGrade$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitGrade$2$$anonfun$apply$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitGrade$2$$anonfun$apply$10.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitGrade$2$$anonfun$apply$11.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitGrade$2$$anonfun$apply$8$$anonfun$apply$9.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitGrade$2$$anonfun$apply$8.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitGrade$2.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitSolution$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitSolution$2.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitSolution$3.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitSolution$4.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitSolution$5$$anonfun$apply$4.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitSolution$5$$anonfun$apply$5.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitSolution$5.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$unpackJar$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$unpackJar$2.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$unpackJar$3.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$unpackJar$4.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\DeprectaionForwarder$.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\DeprectaionForwarder$FwdClass$.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\DeprectaionForwarder$FwdClass.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\DeprectaionForwarder$NaiveTrustManager.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\DeprectaionForwarder.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\JsonSubmission$.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\JsonSubmission.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\QueueResult$.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\QueueResult.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\SubmitJsonProtocol$.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\SubmitJsonProtocol.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\GradingFeedback$.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\GradingFeedback.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anon$1$$anonfun$accept$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anon$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$11.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$12.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$13.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$14$$anonfun$apply$19.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$14.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$15$$anonfun$apply$20.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$15.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$16.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$17.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$18.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$19.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$20.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$21.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$22$$anonfun$apply$21$$anonfun$apply$22.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$22$$anonfun$apply$21.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$22$$anonfun$apply$23$$anonfun$apply$24.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$22$$anonfun$apply$23.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$22$$anonfun$apply$25$$anonfun$apply$26.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$22$$anonfun$apply$25.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$22$$anonfun$apply$27$$anonfun$apply$28.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$22$$anonfun$apply$27.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$22.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$3$$anonfun$apply$5.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$3$$anonfun$apply$6.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$3$$anonfun$apply$7$$anonfun$apply$8.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$3$$anonfun$apply$7$$anonfun$apply$9.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$3$$anonfun$apply$7.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$3.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$4.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$5.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$6$$anonfun$7$$anonfun$apply$12.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$6$$anonfun$7.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$6$$anonfun$apply$13.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$6$$anonfun$apply$14.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$6$$anonfun$apply$15.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$6$$anonfun$apply$16.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$6.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$8$$anonfun$apply$17.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$8$$anonfun$apply$18.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$8.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$assignmentProject$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$assignmentProject$2.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$assignmentProject$3.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$assignmentProject$4.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$assignmentProject$5.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$assignmentProject$6.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$assignmentProject$7.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$assignmentProject$8.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$assignmentProject$9.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$copiedResourceFiles$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$createHandoutSetting$1$$anonfun$apply$11$$anonfun$withRelativeNames$1$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$createHandoutSetting$1$$anonfun$apply$11.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$createHandoutSetting$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$gradeProjectDetailsSetting$1$$anonfun$10.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$gradeProjectDetailsSetting$1$$anonfun$9.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$gradeProjectDetailsSetting$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$handleFailure$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$initGradingSetting$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$recitations$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$recitations$2.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$recitations$3.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$recitations$4.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submissionProject$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submissionProject$2.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submissionProject$3.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submissionProject$4.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submissionProject$5.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submissionProject$6.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submissionProject$7.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submissionProject$8.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submissionProject$9.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSetting$1$$anonfun$apply$1$$anonfun$2$$anonfun$apply$3.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSetting$1$$anonfun$apply$1$$anonfun$2.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSetting$1$$anonfun$apply$1$$anonfun$apply$2.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSetting$1$$anonfun$apply$1$$anonfun$apply$4.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSetting$1$$anonfun$apply$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSetting$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSources$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSources$2$$anonfun$apply$10.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSources$2.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSources$3.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSources$4.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProjectDetails$.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProjectDetails.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\RecordingLogger$.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\RecordingLogger.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\RichJsValue$.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\RichJsValue.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ScalaTestRunner$$anon$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ScalaTestRunner$$anonfun$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ScalaTestRunner$$anonfun$2.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ScalaTestRunner$$anonfun$3.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ScalaTestRunner$$anonfun$4.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ScalaTestRunner$$anonfun$runScalaTest$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ScalaTestRunner$$anonfun$runScalaTest$2.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ScalaTestRunner$.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ScalaTestRunner$LimitedStringBuffer.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ScalaTestRunner.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\Settings$.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\Settings.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\StyleChecker$$anonfun$1.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\StyleChecker$$anonfun$2.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\StyleChecker$$anonfun$3.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\StyleChecker$.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\StyleChecker$CustomTextOutput.class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\StyleChecker.class
binary dependencies:
47 items
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\Program Files\OpenLogic\jdk-8.0.422.05-hotspot\jre\lib\rt.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\Users\user\.ivy2\cache\commons-codec\commons-codec\jars\commons-codec-1.4.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\Users\user\.ivy2\cache\io.spray\spray-json_2.10\jars\spray-json_2.10-1.2.5.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\Users\user\.ivy2\cache\net.databinder\dispatch-core_2.10\jars\dispatch-core_2.10-0.8.8.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\Users\user\.ivy2\cache\net.databinder\dispatch-http_2.10\jars\dispatch-http_2.10-0.8.8.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\Users\user\.ivy2\cache\org.apache.httpcomponents\httpclient\jars\httpclient-4.1.3.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\Users\user\.ivy2\cache\org.apache.httpcomponents\httpcore\jars\httpcore-4.1.4.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\Users\user\.ivy2\cache\org.scala-sbt\io\jars\io-0.13.13.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\Users\user\.ivy2\cache\org.scala-sbt\logging\jars\logging-0.13.13.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\Users\user\.ivy2\cache\org.scalaz\scalaz-core_2.10\jars\scalaz-core_2.10-6.0.4.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\Users\user\.sbt\boot\scala-2.10.6\lib\scala-library.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> C:\Program Files\OpenLogic\jdk-8.0.422.05-hotspot\jre\lib\rt.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> C:\Users\user\.ivy2\cache\org.apache.commons\commons-lang3\jars\commons-lang3-3.1.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> C:\Users\user\.sbt\boot\scala-2.10.6\lib\scala-library.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\Program Files\OpenLogic\jdk-8.0.422.05-hotspot\jre\lib\rt.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\Users\user\.ivy2\cache\org.scala-sbt\apply-macro\jars\apply-macro-0.13.13.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\Users\user\.ivy2\cache\org.scala-sbt\collections\jars\collections-0.13.13.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\Users\user\.ivy2\cache\org.scala-sbt\incremental-compiler\jars\incremental-compiler-0.13.13.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\Users\user\.ivy2\cache\org.scala-sbt\io\jars\io-0.13.13.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\Users\user\.ivy2\cache\org.scala-sbt\ivy\jars\ivy-0.13.13.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\Users\user\.ivy2\cache\org.scala-sbt\logging\jars\logging-0.13.13.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\Users\user\.ivy2\cache\org.scala-sbt\main-settings\jars\main-settings-0.13.13.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\Users\user\.ivy2\cache\org.scala-sbt\main\jars\main-0.13.13.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\Users\user\.ivy2\cache\org.scala-sbt\sbt\jars\sbt-0.13.13.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\Users\user\.ivy2\cache\org.scala-sbt\task-system\jars\task-system-0.13.13.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\Users\user\.ivy2\cache\org.scala-sbt\tasks\jars\tasks-0.13.13.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\Users\user\.ivy2\cache\org.scalaz\scalaz-core_2.10\jars\scalaz-core_2.10-6.0.4.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\Users\user\.ivy2\cache\scala_2.10\sbt_0.13\com.typesafe.sbteclipse\sbteclipse-core\jars\sbteclipse-core-2.2.0.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\Users\user\.ivy2\cache\scala_2.10\sbt_0.13\com.typesafe.sbteclipse\sbteclipse-plugin\jars\sbteclipse-plugin-2.2.0.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\Users\user\.sbt\boot\scala-2.10.6\lib\scala-library.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> C:\Program Files\OpenLogic\jdk-8.0.422.05-hotspot\jre\lib\rt.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> C:\Users\user\.ivy2\cache\org.scala-sbt\logging\jars\logging-0.13.13.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> C:\Users\user\.sbt\boot\scala-2.10.6\lib\scala-library.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> C:\Program Files\OpenLogic\jdk-8.0.422.05-hotspot\jre\lib\rt.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> C:\Users\user\.ivy2\cache\io.spray\spray-json_2.10\jars\spray-json_2.10-1.2.5.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> C:\Users\user\.sbt\boot\scala-2.10.6\lib\scala-library.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> C:\Program Files\OpenLogic\jdk-8.0.422.05-hotspot\jre\lib\rt.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> C:\Users\user\.ivy2\cache\org.scala-sbt\collections\jars\collections-0.13.13.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> C:\Users\user\.ivy2\cache\org.scala-sbt\main\jars\main-0.13.13.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> C:\Users\user\.ivy2\cache\org.scala-sbt\sbt\jars\sbt-0.13.13.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> C:\Users\user\.sbt\boot\scala-2.10.6\lib\scala-library.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> C:\Program Files\OpenLogic\jdk-8.0.422.05-hotspot\jre\lib\rt.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> C:\Users\user\.sbt\boot\scala-2.10.6\lib\scala-library.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> C:\Program Files\OpenLogic\jdk-8.0.422.05-hotspot\jre\lib\rt.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> C:\Users\user\.ivy2\cache\org.scala-sbt\sbt\jars\sbt-0.13.13.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> C:\Users\user\.ivy2\cache\org.scalastyle\scalastyle_2.10\jars\scalastyle_2.10-0.3.2.jar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> C:\Users\user\.sbt\boot\scala-2.10.6\lib\scala-library.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
12 items
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala
member reference external dependencies:
0 items
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
166 items
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Challenge
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Challenge$
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anon$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anon$2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$executeRequest$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$executeRequest$2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$executeRequest$3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$executeRequest$4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$extractJson$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$extractJson$1$$anonfun$apply$6
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$extractJson$1$$anonfun$liftedTree2$1$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$extractJson$1$$anonfun$liftedTree2$1$2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$fullExceptionString$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$getChallenge$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$getChallenge$1$$anonfun$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$getChallenge$1$$anonfun$apply$2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$getChallenge$1$$anonfun$apply$3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$liftedTree1$1$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$liftedTree1$1$2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$liftedTree1$1$3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$submitGrade$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$submitGrade$1$$anonfun$apply$7
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$submitGrade$2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$submitGrade$2$$anonfun$apply$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$submitGrade$2$$anonfun$apply$10
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$submitGrade$2$$anonfun$apply$11
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$submitGrade$2$$anonfun$apply$8
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$submitGrade$2$$anonfun$apply$8$$anonfun$apply$9
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$submitSolution$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$submitSolution$2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$submitSolution$3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$submitSolution$4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$submitSolution$5
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$submitSolution$5$$anonfun$apply$4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$submitSolution$5$$anonfun$apply$5
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$unpackJar$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$unpackJar$2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$unpackJar$3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp$$anonfun$unpackJar$4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> DeprectaionForwarder
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> DeprectaionForwarder$
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> DeprectaionForwarder$FwdClass
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> DeprectaionForwarder$FwdClass$
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> DeprectaionForwarder$NaiveTrustManager
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> JsonSubmission
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> JsonSubmission$
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> QueueResult
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> QueueResult$
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> SubmitJsonProtocol
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> SubmitJsonProtocol$
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> GradingFeedback
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> GradingFeedback$
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anon$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anon$1$$anonfun$accept$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$11
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$12
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$13
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$14
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$14$$anonfun$apply$19
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$15
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$15$$anonfun$apply$20
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$16
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$17
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$18
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$19
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$20
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$21
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$22
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$22$$anonfun$apply$21
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$22$$anonfun$apply$21$$anonfun$apply$22
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$22$$anonfun$apply$23
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$22$$anonfun$apply$23$$anonfun$apply$24
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$22$$anonfun$apply$25
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$22$$anonfun$apply$25$$anonfun$apply$26
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$22$$anonfun$apply$27
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$22$$anonfun$apply$27$$anonfun$apply$28
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$3$$anonfun$apply$5
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$3$$anonfun$apply$6
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$3$$anonfun$apply$7
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$3$$anonfun$apply$7$$anonfun$apply$8
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$3$$anonfun$apply$7$$anonfun$apply$9
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$5
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$6
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$6$$anonfun$7
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$6$$anonfun$7$$anonfun$apply$12
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$6$$anonfun$apply$13
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$6$$anonfun$apply$14
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$6$$anonfun$apply$15
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$6$$anonfun$apply$16
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$8
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$8$$anonfun$apply$17
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$8$$anonfun$apply$18
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$assignmentProject$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$assignmentProject$2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$assignmentProject$3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$assignmentProject$4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$assignmentProject$5
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$assignmentProject$6
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$assignmentProject$7
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$assignmentProject$8
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$assignmentProject$9
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$copiedResourceFiles$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$createHandoutSetting$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$createHandoutSetting$1$$anonfun$apply$11
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$createHandoutSetting$1$$anonfun$apply$11$$anonfun$withRelativeNames$1$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$gradeProjectDetailsSetting$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$gradeProjectDetailsSetting$1$$anonfun$10
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$gradeProjectDetailsSetting$1$$anonfun$9
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$handleFailure$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$initGradingSetting$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$recitations$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$recitations$2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$recitations$3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$recitations$4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$submissionProject$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$submissionProject$2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$submissionProject$3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$submissionProject$4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$submissionProject$5
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$submissionProject$6
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$submissionProject$7
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$submissionProject$8
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$submissionProject$9
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$submitSetting$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$submitSetting$1$$anonfun$apply$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$submitSetting$1$$anonfun$apply$1$$anonfun$2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$submitSetting$1$$anonfun$apply$1$$anonfun$2$$anonfun$apply$3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$submitSetting$1$$anonfun$apply$1$$anonfun$apply$2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$submitSetting$1$$anonfun$apply$1$$anonfun$apply$4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$submitSources$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$submitSources$2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$submitSources$2$$anonfun$apply$10
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$submitSources$3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild$$anonfun$submitSources$4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProjectDetails
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProjectDetails$
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> RecordingLogger
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> RecordingLogger$
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> RichJsValue
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> RichJsValue$
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> ScalaTestRunner
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> ScalaTestRunner$
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> ScalaTestRunner$$anon$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> ScalaTestRunner$$anonfun$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> ScalaTestRunner$$anonfun$2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> ScalaTestRunner$$anonfun$3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> ScalaTestRunner$$anonfun$4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> ScalaTestRunner$$anonfun$runScalaTest$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> ScalaTestRunner$$anonfun$runScalaTest$2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> ScalaTestRunner$LimitedStringBuffer
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> Settings
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> Settings$
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> StyleChecker
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> StyleChecker$
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> StyleChecker$$anonfun$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> StyleChecker$$anonfun$2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> StyleChecker$$anonfun$3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> StyleChecker$CustomTextOutput
used names:
1278 items
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> !=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> $anon
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> &&
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> +
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> ->
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> <
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> <:<
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> <<
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> <byname>
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> <init>
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> <refinement>
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> <repeated>
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> ==
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> >
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> >-
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> A
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> ALLOW_ALL_HOSTNAME_VERIFIER
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> AbstractFunction1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> AbstractFunction3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> AbstractFunction6
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Any
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> AnyRef
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Array
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> ArrayOps
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> ArrowAssoc
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> AuthScope
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> B
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Base64
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Boolean
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Byte
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CanBuildFrom
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Challenge
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Char
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CharSequence
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Charset
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> ClassManifest
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> ClassManifestFactory
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> ClassTag
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> ClientConnectionManager
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> ConfiguredHttpClient
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CourseraHttp
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Credentials
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> CurrentCredentials
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> DefaultHttpClient
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> DefaultJsonProtocol
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> DeprectaionForwarder
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> DigestUtils
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> DynamicVariable
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> EE
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Exception
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> File
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> FileInputStream
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Function1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Function6
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> FwdClass
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Handler
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> HandlerVerbs
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Hex
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Http
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> HttpPackage
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> HttpParams
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> IO
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> IOException
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Identity
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> IndexOutOfBoundsException
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Int
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Iterator
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> JF
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> JsNull
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> JsValue
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> JsValueFormat
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> JsonParser
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> JsonReader
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> JsonSubmission
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> KeyManager
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Logger
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Long
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Map
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> NaiveTrustManager
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> NameFilter
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> NoLogging
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> NonEmptyList
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> None
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Nothing
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Object
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Option
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> P1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> P2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> P3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> P4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> P5
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> P6
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Predef
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Product
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> ProjectDetails
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> QueueResult
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Request
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> RequestVerbs
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> RichJsValue
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> RootJsonFormat
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> SSLContext
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> SSLPeerUnverifiedException
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> SSLSocketFactory
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> ScalaRunTime
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Scalaz
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Scheme
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> SchemeRegistry
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> SecureRandom
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Serializable
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Set
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Settings
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> SingleClientConnManager
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> SocketFactory
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Some
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> StackTraceElement
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> StatusCode
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> String
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> StringJsonFormat
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> StringOps
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> SubmitJsonProtocol
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> T
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> T0
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> T1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> T2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> T3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> T4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> T5
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> T6
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> That
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Throwable
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Traversable
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> TrustManager
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Tuple2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Tuple3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Tuple6
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> U
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Unit
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> Validation
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> ValidationNEL
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> X
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> X509Certificate
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> X509HostnameVerifier
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> X509TrustManager
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> \
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> _$4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> _$6
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> _hashCode
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> _root_
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> _toString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> any2ArrowAssoc
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> apache
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> apiKey
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> apiState
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> api_state
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> apply
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> asInstanceOf
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> assignmentPartId
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> augmentString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> baseReq
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> binary
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> bytes
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> canBuildFrom
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> cert
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> chResponse
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> challenge
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> challengeKey
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> challengeUrl
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> chars
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> classType
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> client
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> close
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> cm
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> code
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> codec
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> commons
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> conn
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> contains
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> contents
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> convertTo
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> courseId
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> createHttpParams
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> credentials
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> debug
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> decodeBase64
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> digest
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> dispatch
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> dispatch_client
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> e
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> email
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> encodeBase64
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> encodeHex
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> encodedFile
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> enrichJsValue
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> eq
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> ex
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> executeRequest
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> exists
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> extractJson
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> failNel
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> feedback
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> file
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> fileData
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> fileLength
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> files
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> filterNot
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> flatMap
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> foreach
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> fullExceptionString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> getAbsolutePath
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> getAcceptedIssuers
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> getBytes
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> getInstance
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> getStackTrace
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> gradeProject
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> http
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> httpsScheme
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> impl
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> init
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> insecureClient
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> insecureClientForwarder
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> insecureHttp
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> io
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> is
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> isEmpty
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> isInstanceOf
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> jarContent
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> java
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> javax
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> js
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> json
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> jsonData
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> jsonFile
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> jsonFormat6
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> jsonSubmission
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> jsonSubmissionFormat
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> l
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> length
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> logger
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> map
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> materializeClassTag
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> maxSubmitFileSize
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> message
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> mkIdentity
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> mkString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> msg
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> net
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> offlineMode
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> org
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> otPassword
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> package
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> params
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> parse
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> parsed
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> parts
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> println
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> queueResult
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> read
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> refArrayOps
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> reflect
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> register
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> req
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> reqArgs
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> res
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> runtime
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> s
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> sbt
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> scala
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> scalaz
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> scheme
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> schemeRegistry
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> score
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> security
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> sf
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> sha
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> shaHexDigest
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> sizeRead
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> solutions
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> sourcesJar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> split
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> spray
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> ssl
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> sslContext
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> state
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> status
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> str
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> submission
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> submission_encoding
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> submission_metadata
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> submitProject
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> submitUrl
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> successNel
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> targetDirectory
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> targetJar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> toHandlerVerbs
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> toInt
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> toRequestVerbs
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> toString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> typedProductIterator
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> unary_!
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> unzip
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> uploadFeedbackUrl
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> url
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> user_info
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> withArgs
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> write
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> ||
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> *
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> +
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> +=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> -
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> <init>
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> <repeated>
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> Any
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> AnyRef
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> Boolean
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> Double
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> GradingFeedback
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> ListBuffer
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> Object
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> Predef
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> String
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> StringEscapeUtils
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> StringOps
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> Unit
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> addDetails
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> addSummary
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> allTestsPassedMessage
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> apache
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> apiState
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> apiState_=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> augmentString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> clear
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> collection
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> commons
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> compileFailedMessage
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> downloadUnpackFailedMessage
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> escapeHtml4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> failed
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> failed_=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> feedbackDetails
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> feedbackSummary
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> format
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> html
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> lang3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> log
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> maxScore
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> maxStyleScore
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> maxTestScore
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> mkString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> msg
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> mutable
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> org
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> perfectStyleMessage
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> s
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> scala
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> score
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> stripMargin
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> styleProblemsMessage
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> styleScoreRatio
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> testCompileFailedMessage
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> testExecutionFailedMessage
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> testsFailedMessage
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> total
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> totalGradeMessage
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> totalScore
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> trim
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> uniqueGradeId
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> uuid
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> vMaxStyleScore
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> vMaxStyleScore_=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> vMaxTestScore
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> vMaxTestScore_=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> vStyleScore
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> vStyleScore_=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> vTestScore
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> vTestScore_=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> !=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> $anon
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> &&
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> *
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> **
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> +
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ++
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> +:
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> /
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> :+
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ::
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> :=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> <<=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> <byname>
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> <init>
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> <refinement>
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> <repeated>
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ==
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> A
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> A1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> AbstractFunction5
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> AbstractLogger
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> AbstractPartialFunction
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> AddSettings
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Analysis
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Any
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> AnyInitTask
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> AnyRef
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> AnyValManifest
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Array
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Attributed
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> B
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> B1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Boolean
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Build
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> C
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> CanBuildFrom
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Challenge
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Classpath
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ClasspathDep
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Coll
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Compile
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ConfigKey
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Configuration
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> CourseraHttp
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> D
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Def
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Defaults
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Double
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> E
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> EE
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> EclipseKeys
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> EclipsePlugin
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> F
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Failure
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> File
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> FileFilter
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> FullInstance
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> FullLogger
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Function0
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Function1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Function2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Function3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Function4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Function5
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Function6
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Function7
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Function8
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> G
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> GenTraversableOnce
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> GradingFeedback
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> H
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> IO
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Identity
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Inc
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Incomplete
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> IndexOutOfBoundsException
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Initialize
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> InitializeInstance
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> InputKey
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> InputTask
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Int
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Iterable
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Iterator
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Keys
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> LinePosition
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> List
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Logger
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ManifestFactory
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Map
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Mapper
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> MatchError
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ModuleID
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Nil
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> NonEmptyList
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> None
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Nothing
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Object
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Option
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> PartialFunction
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> PathFinder
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> PathMap
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Predef
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Product
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProgFunBuild
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Project
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProjectDetails
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ProjectReference
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Properties
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> QueueResult
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> R
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> RecordingLogger
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Reference
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Result
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> RichFile
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> RichInitializeTask
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> RichTaskable2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> RichTaskable3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> RichTaskable4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> RichTaskable5
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> RichTaskable6
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> RichTaskable7
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> RichTaskable8
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> S
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ScalaRunTime
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ScalaTestRunner
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Scalaz
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Scoped
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ScopedKey
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ScopedTaskable
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Seq
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Serializable
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Setting
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> SettingKey
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Settings
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> SettingsDefinition
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Some
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> SourcePosition
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Statics
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> String
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> StringOps
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> StyleChecker
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Success
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> T
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> T0
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> T1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> T2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> T3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> T4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> T5
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> T6
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> T7
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> T8
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Task
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> TaskKey
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> TaskStreams
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Test
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> That
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Throwable
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Traversable
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Tuple2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Tuple3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Tuple4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Tuple5
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Tuple6
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Tuple7
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Tuple8
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> U
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Unit
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Validation
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ValidationNEL
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Value
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> WrappedArray
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> X
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> Z
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> _$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> _$4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> _$71
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> _$72
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> _$74
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> _$9
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> _1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> _2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> _3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> _4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> _root_
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> _toString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> a
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> allFiles
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> anyHash
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> apiKey
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> apiKeyR
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> apiState
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> apiState_=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> apply
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> argTask
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> args
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> asInstanceOf
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> assess
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> assignmentPartId
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> assignmentProject
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> augmentString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> baseDir
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> baseDirectory
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> basedir
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> canBuildFrom
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> cause
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> chResponse
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> challenge
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> challengeResponse
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> classDirectory
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> classType
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> classpath
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> clean
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> clear
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> collect
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> collection
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> com
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> commonSourcePackages
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> commonSrcs
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> compile
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> compileFailed
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> compileTestFailed
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> configurationToKey
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> copied
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> copiedResourceFiles
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> copyResources
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> courseId
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> createHandout
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> createHandoutSetting
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> currentFunction
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> currentProject
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> debug
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> delete
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> deleteFiles
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> dependsOn
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> details
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> detailsMap
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> doubleHash
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> downloadUnpackFailed
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> e
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> eclipseDone
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> email
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> eq
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> equals
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> error
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> exists
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> extraLoggers
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> failDownloadUnpack
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> failSubmit
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> feedback
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> feedbackString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> file
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> files
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> filesFinder
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> filesToFinder
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> filesWithRelativeNames
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> filter
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> finalizeHash
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> find
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> finder
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> flatMap
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> foreach
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> format
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> fs
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> fullClasspath
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> fullExceptionString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> get
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> getChallenge
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> getOrElse
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> getSubmission
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> getSubmissionHook
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> getSubmissionSetting
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> globalPackages
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> grade
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> gradeProjectDetails
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> gradeProjectDetailsSetting
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> gradeScore
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> gradeSetting
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> gradingCourseId
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> gradingSrcs
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> gradingTestPackages
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> gradingUUID
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> handleFailure
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> handler
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> handoutFiles
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> handoutProjectName
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> immutable
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> in
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> inConfig
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> inc
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> individualTestTimeout
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> info
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> initGrading
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> initGradingSetting
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> initialize
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> inputTask
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> io
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> isEmpty
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> isFailed
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> isFile
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> isInstanceOf
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> java
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> jsonFile
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> key
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> keys
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> libraryDependencies
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> list
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> listFiles
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> log
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> logOpt
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> logger
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> manualDepsWithRelativeNames
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> map
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> mapR
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> maxResult
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> maxScore
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> maxStyleScore
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> mix
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> mkIdentity
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> mkString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> msg
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> msgRaw
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> msgs
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> name
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ne
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> offlineMode
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> originalApiKey
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> otPassword
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> outfile
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> package
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> packageName
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> packageSubmission
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> packageSubmissionFiles
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> packageTaskSettings
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> packages
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> partId
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> partIdOfGradingProject
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> perfectStyle
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> pkg
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> plugin
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> policyFile
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> policyFileName
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> println
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> project
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> projectDetails
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> projectDetailsMap
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> projectDetailsR
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> projectFiles
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> projectName
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> projectToRef
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> pure
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> queueResult
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> readAndClear
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> readAndUnpackSubmission
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> readCompileLog
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> readJsonFile
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> readTestCompileLog
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> recitations
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> reflect
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> relativeTo
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> relativize
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> relativizeLibs
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> res
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> resourceDir
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> resourceDirectory
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> resources
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> resourcesFromAssignment
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> response
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> richFile
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> richInitializeTask
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> runLog
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> runScalaTest
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> runtime
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> s
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> sbt
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> sbteclipse
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> scala
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> scalaSource
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> scalaSrcDir
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> scalaTest
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> scalaTestDefaultWeigth
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> scalaTestDefaultWeigthProperty
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> scalaTestGrade
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> scalaTestIndividualTestTimeoutProperty
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> scalaTestSetting
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> scalaTestSubmission
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> scalaTestSubmissionSetting
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> scalaVersion
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> scalacOptions
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> scalaz
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> score
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> scoreString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> selectMainSources
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> selectResourcesForProject
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> selectTestSources
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> selectTestsForProject
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> set
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> setMaxScore
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> setMaxScoreHook
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> setMaxScoreSetting
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> setProp
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> setTestProperties
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> setTestPropertiesHook
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> setTestPropertiesSetting
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> settings
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> skipProject
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> sourceDirectory
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> sourceFiles
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> sourceMappings
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> sources
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> sourcesJar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> srcMainScalaDir
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> srcTestScalaDir
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> startsWith
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> str
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> streams
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> stripMargin
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> styleCheck
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> styleCheckSetting
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> styleCheckSubmission
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> styleCheckSubmissionSetting
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> styleProblems
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> styleScoreRatio
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> submissionDirName
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> submissionJarFileName
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> submissionJsonFileName
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> submissionLoggerSetting
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> submissionProject
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> submissionSrcDir
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> submit
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> submitGrade
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> submitProject
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> submitProjectName
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> submitSetting
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> submitSolution
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> submitSources
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> success
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> successNel
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> sys
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> t2ToTable2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> t3ToTable3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> t4ToTable4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> t5ToTable5
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> t6ToTable6
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> t7ToTable7
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> t8ToTable8
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> target
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> targetDir
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> targetJar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> targetSourceDir
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> targetZip
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> test
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> testClasses
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> testCompileFailed
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> testResultsFileName
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> testSourcesFromAssignment
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> testSrcScalaDir
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> to
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> toList
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> toString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> totalScore
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> transform
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> typedProductIterator
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> typesafe
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> unary_!
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> unchecked
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> unmanagedBase
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> unmanagedSourceDirectories
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> unmanagedSources
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> unpackJar
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> util
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> uuid
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> uuidR
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> v
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> validIds
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> value
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> version
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> warn
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> withRelativeNames
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> wrapRefArray
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> wrongNameMsg
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> wrongNameMsg$lzy
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> x
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> x$26
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> x$27
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> x$28
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> x$29
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> x$30
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> x_!
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> zip
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ||
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> ~=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> +=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> <byname>
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> <init>
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> <repeated>
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> ==
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> A
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> Any
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> AnyRef
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> Boolean
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> Error
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> Level
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> ListBuffer
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> Logger
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> Nothing
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> Object
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> Predef
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> RecordingLogger
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> String
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> Throwable
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> Unit
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> Value
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> _root_
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> apply
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> buffer
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> clear
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> collection
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> level
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> message
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> mkString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> mutable
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> nonEmpty
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> package
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> res
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> sbt
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> scala
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> +
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> <init>
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> Any
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> AnyRef
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> Boolean
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> IllegalArgumentException
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> JsArray
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> JsObject
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> JsValue
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> List
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> Map
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> Nothing
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> Object
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> Predef
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> RichJsValue
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> String
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> T0
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> apply
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> asInstanceOf
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> contains
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> elements
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> fields
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> isInstanceOf
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> js
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> json
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> name
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> package
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> scala
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> spray
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> values
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> !=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> $anon
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> &&
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> *
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> +
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> /
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> ::
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> <
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> <init>
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> <repeated>
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> ==
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> >
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> A
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Any
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> AnyRef
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Array
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> ArrayOps
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Attributed
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> B
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Boolean
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> BufferedSource
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Callable
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> CanBuildFrom
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Char
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> CharSequence
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Classpath
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Codec
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Coll
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Double
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> ExecutorService
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Executors
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> File
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Function1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Future
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> GradingFeedback
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Int
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Keys
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> LimitedStringBuffer
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> List
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> ListBuffer
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Long
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> MatchError
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Nil
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Nothing
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Object
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Option
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Predef
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Process
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> ProcessBuilder
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> ProcessLogger
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> ScalaTestRunner
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Seq
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Settings
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Some
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Source
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> String
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> StringOps
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> SysProc
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> T
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> T1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> T2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> T3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> T4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> That
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Throwable
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> TimeUnit
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> TimeoutException
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Tuple2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Tuple3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Tuple4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> Unit
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> _1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> _2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> _3
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> _4
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> _root_
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> allTestsPassed
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> append
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> apply
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> augmentString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> buf
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> c
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> canBuildFrom
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> cancel
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> classpath
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> classpathString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> cmd
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> collection
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> concurrent
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> data
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> delete
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> destroy
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> drop
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> e
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> error
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> executor
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> exitValue
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> extractWeights
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> fallbackSystemCodec
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> feedback
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> feedbackFileContent
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> file
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> forkProcess
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> fromFile
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> future
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> get
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> getAbsolutePath
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> grade
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> immutable
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> individualTestTimeout
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> io
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> isEmpty
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> java
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> length
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> lengthCompare
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> lengthCropped
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> lengthCropped_=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> lines
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> lines_=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> logError
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> map
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> max
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> maxOutputLineLength
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> maxOutputLines
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> maxScore
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> maxTestScore
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> mkString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> msg
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> mutable
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> name
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> ne
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> newSingleThreadExecutor
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> nums
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> out
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> outfile
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> outfileStr
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> p
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> package
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> policyFile
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> policyFileStr
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> prepend
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> proc
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> process
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> prop
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> refArrayOps
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> replace
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> resourceFiles
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> resourceFilesString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> rest
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> run
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> runLog
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> runPathString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> runScalaTest
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> s
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> sbt
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> scala
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> scalaTestDefaultWeigth
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> scalaTestDefaultWeigthProperty
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> scalaTestIndividualTestTimeoutProperty
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> scalaTestReadableFilesProperty
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> scalaTestReportFileProperty
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> scalaTestTimeout
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> scaledScore
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> score
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> shortS
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> shutdown
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> span
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> split
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> stripMargin
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> submit
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> substring
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> sys
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> testClasses
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> testExecutionDebugLog
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> testExecutionFailed
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> testRunpath
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> testsFailed
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> timeout
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> to
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> toInt
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> toList
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> toLong
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> toString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> trim
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> unapplySeq
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> unary_!
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> unchecked
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> util
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> value
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> *
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> +
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> <init>
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> Any
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> AnyRef
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> Boolean
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> Int
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> Object
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> Predef
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> Settings
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> String
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> baseURL
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> courseId
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> individualTestTimeout
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> maxOutputLineLength
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> maxOutputLines
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> maxSubmitFileSize
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> mb
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> offlineMode
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> policyFileName
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> scala
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> scalaTestDefaultWeigth
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> scalaTestDefaultWeigthProperty
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> scalaTestIndividualTestTimeoutProperty
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> scalaTestReadableFilesProperty
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> scalaTestReportFileProperty
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> scalaTestTimeout
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> submissionDirName
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> submissionJarFileName
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> submissionJsonFileName
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> testResultsFileName
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> +
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> -
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> <byname>
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> <init>
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> <repeated>
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> ==
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> >
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> ?0
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> Any
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> AnyRef
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> Boolean
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> ByteArrayOutputStream
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> CharSequence
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> Class
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> ClassLoader
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> Console
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> CustomTextOutput
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> Directory
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> File
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> FileSpec
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> Function1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> Int
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> Iterable
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> Level
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> List
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> MatchError
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> Message
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> MessageHelper
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> None
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> Nothing
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> Object
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> Option
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> Output
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> OutputResult
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> OutputStream
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> Predef
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> PrintStream
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> ScalastyleChecker
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> ScalastyleConfiguration
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> Seq
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> Settings
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> Some
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> StartFile
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> String
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> StringOps
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> StyleChecker
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> StyleError
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> StyleException
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> T
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> T0
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> T1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> T2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> Tuple2
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> Unit
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> _$1
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> _0
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> _root_
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> allSources
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> args
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> asInstanceOf
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> augmentString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> baseURL
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> checkFiles
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> clazz
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> column
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> configFile
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> contains
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> customMessage
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> errors
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> exists
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> f
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> file
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> fileCount
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> fileCount_=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> fileSpec
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> files
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> filterNot
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> findMessage
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> format
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> getAbsolutePath
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> getClass
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> getClassLoader
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> getFiles
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> io
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> isInstanceOf
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> java
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> key
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> level
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> line
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> lineNumber
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> m
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> math
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> max
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> maxResult
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> message
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> messageHelper
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> messages
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> msg
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> name
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> org
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> output
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> outputResult
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> package
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> path
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> penalties
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> pos
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> print
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> println
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> reactive
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> readFromXml
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> report
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> sbt
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> scala
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> scalastyle
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> score
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> sources
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> text
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> toString
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> tweak
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> warnings
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> withOut
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> x
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> ||
product stamps:
166 items
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\Challenge$.class -> lastModified(1725683315539)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\Challenge.class -> lastModified(1725683315537)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anon$1.class -> lastModified(1725683315548)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anon$2.class -> lastModified(1725683315550)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$2.class -> lastModified(1725683315552)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$executeRequest$1.class -> lastModified(1725683315554)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$executeRequest$2.class -> lastModified(1725683315555)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$executeRequest$3.class -> lastModified(1725683315556)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$executeRequest$4.class -> lastModified(1725683315557)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$extractJson$1$$anonfun$apply$6.class -> lastModified(1725683315560)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$extractJson$1$$anonfun$liftedTree2$1$1.class -> lastModified(1725683315561)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$extractJson$1$$anonfun$liftedTree2$1$2.class -> lastModified(1725683315562)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$extractJson$1.class -> lastModified(1725683315559)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$fullExceptionString$1.class -> lastModified(1725683315563)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$getChallenge$1$$anonfun$1.class -> lastModified(1725683315565)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$getChallenge$1$$anonfun$apply$2.class -> lastModified(1725683315566)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$getChallenge$1$$anonfun$apply$3.class -> lastModified(1725683315567)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$getChallenge$1.class -> lastModified(1725683315564)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$liftedTree1$1$1.class -> lastModified(1725683315568)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$liftedTree1$1$2.class -> lastModified(1725683315569)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$liftedTree1$1$3.class -> lastModified(1725683315570)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitGrade$1$$anonfun$apply$7.class -> lastModified(1725683315572)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitGrade$1.class -> lastModified(1725683315571)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitGrade$2$$anonfun$apply$1.class -> lastModified(1725683315574)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitGrade$2$$anonfun$apply$10.class -> lastModified(1725683315575)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitGrade$2$$anonfun$apply$11.class -> lastModified(1725683315576)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitGrade$2$$anonfun$apply$8$$anonfun$apply$9.class -> lastModified(1725683315578)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitGrade$2$$anonfun$apply$8.class -> lastModified(1725683315577)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitGrade$2.class -> lastModified(1725683315573)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitSolution$1.class -> lastModified(1725683315579)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitSolution$2.class -> lastModified(1725683315580)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitSolution$3.class -> lastModified(1725683315581)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitSolution$4.class -> lastModified(1725683315581)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitSolution$5$$anonfun$apply$4.class -> lastModified(1725683315583)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitSolution$5$$anonfun$apply$5.class -> lastModified(1725683315585)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$submitSolution$5.class -> lastModified(1725683315582)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$unpackJar$1.class -> lastModified(1725683315585)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$unpackJar$2.class -> lastModified(1725683315586)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$unpackJar$3.class -> lastModified(1725683315587)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$$anonfun$unpackJar$4.class -> lastModified(1725683315588)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp$.class -> lastModified(1725683315547)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\CourseraHttp.class -> lastModified(1725683315541)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\DeprectaionForwarder$.class -> lastModified(1725683315590)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\DeprectaionForwarder$FwdClass$.class -> lastModified(1725683315591)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\DeprectaionForwarder$FwdClass.class -> lastModified(1725683315592)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\DeprectaionForwarder$NaiveTrustManager.class -> lastModified(1725683315592)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\DeprectaionForwarder.class -> lastModified(1725683315589)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\GradingFeedback$.class -> lastModified(1725683315597)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\GradingFeedback.class -> lastModified(1725683315594)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\JsonSubmission$.class -> lastModified(1725683315598)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\JsonSubmission.class -> lastModified(1725683315600)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anon$1$$anonfun$accept$1.class -> lastModified(1725683315617)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anon$1.class -> lastModified(1725683315616)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$1.class -> lastModified(1725683315618)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$11.class -> lastModified(1725683315619)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$12.class -> lastModified(1725683315620)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$13.class -> lastModified(1725683315620)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$14$$anonfun$apply$19.class -> lastModified(1725683315622)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$14.class -> lastModified(1725683315621)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$15$$anonfun$apply$20.class -> lastModified(1725683315624)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$15.class -> lastModified(1725683315623)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$16.class -> lastModified(1725683315625)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$17.class -> lastModified(1725683315626)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$18.class -> lastModified(1725683315627)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$19.class -> lastModified(1725683315628)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$20.class -> lastModified(1725683315630)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$21.class -> lastModified(1725683315631)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$22$$anonfun$apply$21$$anonfun$apply$22.class -> lastModified(1725683315635)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$22$$anonfun$apply$21.class -> lastModified(1725683315634)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$22$$anonfun$apply$23$$anonfun$apply$24.class -> lastModified(1725683315637)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$22$$anonfun$apply$23.class -> lastModified(1725683315636)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$22$$anonfun$apply$25$$anonfun$apply$26.class -> lastModified(1725683315639)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$22$$anonfun$apply$25.class -> lastModified(1725683315638)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$22$$anonfun$apply$27$$anonfun$apply$28.class -> lastModified(1725683315641)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$22$$anonfun$apply$27.class -> lastModified(1725683315640)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$22.class -> lastModified(1725683315633)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$3$$anonfun$apply$5.class -> lastModified(1725683315642)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$3$$anonfun$apply$6.class -> lastModified(1725683315643)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$3$$anonfun$apply$7$$anonfun$apply$8.class -> lastModified(1725683315645)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$3$$anonfun$apply$7$$anonfun$apply$9.class -> lastModified(1725683315646)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$3$$anonfun$apply$7.class -> lastModified(1725683315645)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$3.class -> lastModified(1725683315642)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$4.class -> lastModified(1725683315647)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$5.class -> lastModified(1725683315648)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$6$$anonfun$7$$anonfun$apply$12.class -> lastModified(1725683315651)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$6$$anonfun$7.class -> lastModified(1725683315650)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$6$$anonfun$apply$13.class -> lastModified(1725683315652)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$6$$anonfun$apply$14.class -> lastModified(1725683315653)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$6$$anonfun$apply$15.class -> lastModified(1725683315653)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$6$$anonfun$apply$16.class -> lastModified(1725683315654)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$6.class -> lastModified(1725683315649)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$8$$anonfun$apply$17.class -> lastModified(1725683315656)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$8$$anonfun$apply$18.class -> lastModified(1725683315657)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$8.class -> lastModified(1725683315655)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$assignmentProject$1.class -> lastModified(1725683315658)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$assignmentProject$2.class -> lastModified(1725683315659)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$assignmentProject$3.class -> lastModified(1725683315660)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$assignmentProject$4.class -> lastModified(1725683315661)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$assignmentProject$5.class -> lastModified(1725683315661)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$assignmentProject$6.class -> lastModified(1725683315662)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$assignmentProject$7.class -> lastModified(1725683315663)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$assignmentProject$8.class -> lastModified(1725683315663)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$assignmentProject$9.class -> lastModified(1725683315664)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$copiedResourceFiles$1.class -> lastModified(1725683315665)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$createHandoutSetting$1$$anonfun$apply$11$$anonfun$withRelativeNames$1$1.class -> lastModified(1725683315669)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$createHandoutSetting$1$$anonfun$apply$11.class -> lastModified(1725683315668)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$createHandoutSetting$1.class -> lastModified(1725683315667)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$gradeProjectDetailsSetting$1$$anonfun$10.class -> lastModified(1725683315672)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$gradeProjectDetailsSetting$1$$anonfun$9.class -> lastModified(1725683315672)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$gradeProjectDetailsSetting$1.class -> lastModified(1725683315671)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$handleFailure$1.class -> lastModified(1725683315673)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$initGradingSetting$1.class -> lastModified(1725683315674)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$recitations$1.class -> lastModified(1725683315675)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$recitations$2.class -> lastModified(1725683315676)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$recitations$3.class -> lastModified(1725683315677)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$recitations$4.class -> lastModified(1725683315678)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submissionProject$1.class -> lastModified(1725683315679)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submissionProject$2.class -> lastModified(1725683315680)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submissionProject$3.class -> lastModified(1725683315681)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submissionProject$4.class -> lastModified(1725683315681)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submissionProject$5.class -> lastModified(1725683315682)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submissionProject$6.class -> lastModified(1725683315683)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submissionProject$7.class -> lastModified(1725683315684)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submissionProject$8.class -> lastModified(1725683315685)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submissionProject$9.class -> lastModified(1725683315685)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSetting$1$$anonfun$apply$1$$anonfun$2$$anonfun$apply$3.class -> lastModified(1725683315690)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSetting$1$$anonfun$apply$1$$anonfun$2.class -> lastModified(1725683315689)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSetting$1$$anonfun$apply$1$$anonfun$apply$2.class -> lastModified(1725683315691)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSetting$1$$anonfun$apply$1$$anonfun$apply$4.class -> lastModified(1725683315691)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSetting$1$$anonfun$apply$1.class -> lastModified(1725683315688)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSetting$1.class -> lastModified(1725683315686)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSources$1.class -> lastModified(1725683315692)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSources$2$$anonfun$apply$10.class -> lastModified(1725683315694)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSources$2.class -> lastModified(1725683315693)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSources$3.class -> lastModified(1725683315695)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$$anonfun$submitSources$4.class -> lastModified(1725683315696)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild$.class -> lastModified(1725683315614)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProgFunBuild.class -> lastModified(1725683315605)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProjectDetails$.class -> lastModified(1725683315699)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ProjectDetails.class -> lastModified(1725683315698)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\QueueResult$.class -> lastModified(1725683315700)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\QueueResult.class -> lastModified(1725683315701)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\RecordingLogger$.class -> lastModified(1725683315703)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\RecordingLogger.class -> lastModified(1725683315702)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\RichJsValue$.class -> lastModified(1725683315704)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\RichJsValue.class -> lastModified(1725683315706)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ScalaTestRunner$$anon$1.class -> lastModified(1725683315711)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ScalaTestRunner$$anonfun$1.class -> lastModified(1725683315712)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ScalaTestRunner$$anonfun$2.class -> lastModified(1725683315712)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ScalaTestRunner$$anonfun$3.class -> lastModified(1725683315713)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ScalaTestRunner$$anonfun$4.class -> lastModified(1725683315714)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ScalaTestRunner$$anonfun$runScalaTest$1.class -> lastModified(1725683315715)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ScalaTestRunner$$anonfun$runScalaTest$2.class -> lastModified(1725683315715)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ScalaTestRunner$.class -> lastModified(1725683315710)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ScalaTestRunner$LimitedStringBuffer.class -> lastModified(1725683315716)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\ScalaTestRunner.class -> lastModified(1725683315707)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\Settings$.class -> lastModified(1725683315718)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\Settings.class -> lastModified(1725683315717)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\StyleChecker$$anonfun$1.class -> lastModified(1725683315722)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\StyleChecker$$anonfun$2.class -> lastModified(1725683315723)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\StyleChecker$$anonfun$3.class -> lastModified(1725683315724)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\StyleChecker$.class -> lastModified(1725683315721)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\StyleChecker$CustomTextOutput.class -> lastModified(1725683315726)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\StyleChecker.class -> lastModified(1725683315720)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\SubmitJsonProtocol$.class -> lastModified(1725683315751)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\target\scala-2.10\sbt-0.13\classes\SubmitJsonProtocol.class -> lastModified(1725683315739)
source stamps:
8 items
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> hash(ecf573c3388184be966ae26468e5edc67623da86)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> hash(d3d1a3ce428365042ae28c0a1cc869bf74c4a030)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> hash(e3f7d852c91c3c119ace558ab2db6623adf262b0)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> hash(4b28bfa1e4dfa5de24e2b3fff8c1141d2b3900dd)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> hash(84c1a0df8983735819f8c6f161b5332ea1fc4545)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> hash(a5307b3a578c51905f41a27cc3cd2c61f213fb32)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> hash(5bab5d553277d9650281b2c41114c570c5f4e4e5)
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> hash(2995f9602cdc1ed752a1d660708862e30fbff189)
binary stamps:
24 items
C:\Program Files\OpenLogic\jdk-8.0.422.05-hotspot\jre\lib\rt.jar -> lastModified(1721250982000)
C:\Users\user\.ivy2\cache\commons-codec\commons-codec\jars\commons-codec-1.4.jar -> lastModified(1249852563000)
C:\Users\user\.ivy2\cache\io.spray\spray-json_2.10\jars\spray-json_2.10-1.2.5.jar -> lastModified(1387269276000)
C:\Users\user\.ivy2\cache\net.databinder\dispatch-core_2.10\jars\dispatch-core_2.10-0.8.8.jar -> lastModified(1354516070000)
C:\Users\user\.ivy2\cache\net.databinder\dispatch-http_2.10\jars\dispatch-http_2.10-0.8.8.jar -> lastModified(1354515753000)
C:\Users\user\.ivy2\cache\org.apache.commons\commons-lang3\jars\commons-lang3-3.1.jar -> lastModified(1321342025000)
C:\Users\user\.ivy2\cache\org.apache.httpcomponents\httpclient\jars\httpclient-4.1.3.jar -> lastModified(1328184915000)
C:\Users\user\.ivy2\cache\org.apache.httpcomponents\httpcore\jars\httpcore-4.1.4.jar -> lastModified(1324226255000)
C:\Users\user\.ivy2\cache\org.scala-sbt\apply-macro\jars\apply-macro-0.13.13.jar -> lastModified(1477656220000)
C:\Users\user\.ivy2\cache\org.scala-sbt\collections\jars\collections-0.13.13.jar -> lastModified(1618381348000)
C:\Users\user\.ivy2\cache\org.scala-sbt\incremental-compiler\jars\incremental-compiler-0.13.13.jar -> lastModified(1618381293000)
C:\Users\user\.ivy2\cache\org.scala-sbt\io\jars\io-0.13.13.jar -> lastModified(1618381409000)
C:\Users\user\.ivy2\cache\org.scala-sbt\ivy\jars\ivy-0.13.13.jar -> lastModified(1618381421000)
C:\Users\user\.ivy2\cache\org.scala-sbt\logging\jars\logging-0.13.13.jar -> lastModified(1477656346000)
C:\Users\user\.ivy2\cache\org.scala-sbt\main-settings\jars\main-settings-0.13.13.jar -> lastModified(1618381451000)
C:\Users\user\.ivy2\cache\org.scala-sbt\main\jars\main-0.13.13.jar -> lastModified(1618381569000)
C:\Users\user\.ivy2\cache\org.scala-sbt\sbt\jars\sbt-0.13.13.jar -> lastModified(1477656536000)
C:\Users\user\.ivy2\cache\org.scala-sbt\task-system\jars\task-system-0.13.13.jar -> lastModified(1477656414000)
C:\Users\user\.ivy2\cache\org.scala-sbt\tasks\jars\tasks-0.13.13.jar -> lastModified(1477656294000)
C:\Users\user\.ivy2\cache\org.scalastyle\scalastyle_2.10\jars\scalastyle_2.10-0.3.2.jar -> lastModified(1370897538000)
C:\Users\user\.ivy2\cache\org.scalaz\scalaz-core_2.10\jars\scalaz-core_2.10-6.0.4.jar -> lastModified(1357117481000)
C:\Users\user\.ivy2\cache\scala_2.10\sbt_0.13\com.typesafe.sbteclipse\sbteclipse-core\jars\sbteclipse-core-2.2.0.jar -> lastModified(1618381623000)
C:\Users\user\.ivy2\cache\scala_2.10\sbt_0.13\com.typesafe.sbteclipse\sbteclipse-plugin\jars\sbteclipse-plugin-2.2.0.jar -> lastModified(1429631302000)
C:\Users\user\.sbt\boot\scala-2.10.6\lib\scala-library.jar -> lastModified(1442568926000)
class names:
24 items
C:\Program Files\OpenLogic\jdk-8.0.422.05-hotspot\jre\lib\rt.jar -> java.lang.Object
C:\Users\user\.ivy2\cache\commons-codec\commons-codec\jars\commons-codec-1.4.jar -> org.apache.commons.codec.digest.DigestUtils
C:\Users\user\.ivy2\cache\io.spray\spray-json_2.10\jars\spray-json_2.10-1.2.5.jar -> spray.json.JsObject
C:\Users\user\.ivy2\cache\net.databinder\dispatch-core_2.10\jars\dispatch-core_2.10-0.8.8.jar -> dispatch.NoLogging
C:\Users\user\.ivy2\cache\net.databinder\dispatch-http_2.10\jars\dispatch-http_2.10-0.8.8.jar -> dispatch.Http
C:\Users\user\.ivy2\cache\org.apache.commons\commons-lang3\jars\commons-lang3-3.1.jar -> org.apache.commons.lang3.StringEscapeUtils
C:\Users\user\.ivy2\cache\org.apache.httpcomponents\httpclient\jars\httpclient-4.1.3.jar -> org.apache.http.conn.ssl.SSLSocketFactory
C:\Users\user\.ivy2\cache\org.apache.httpcomponents\httpcore\jars\httpcore-4.1.4.jar -> org.apache.http.params.HttpParams
C:\Users\user\.ivy2\cache\org.scala-sbt\apply-macro\jars\apply-macro-0.13.13.jar -> sbt.appmacro.Instance$
C:\Users\user\.ivy2\cache\org.scala-sbt\collections\jars\collections-0.13.13.jar -> sbt.Attributed
C:\Users\user\.ivy2\cache\org.scala-sbt\incremental-compiler\jars\incremental-compiler-0.13.13.jar -> sbt.inc.Analysis
C:\Users\user\.ivy2\cache\org.scala-sbt\io\jars\io-0.13.13.jar -> sbt.FileFilter
C:\Users\user\.ivy2\cache\org.scala-sbt\ivy\jars\ivy-0.13.13.jar -> sbt.ModuleID
C:\Users\user\.ivy2\cache\org.scala-sbt\logging\jars\logging-0.13.13.jar -> sbt.Logger
C:\Users\user\.ivy2\cache\org.scala-sbt\main-settings\jars\main-settings-0.13.13.jar -> sbt.ProjectReference
C:\Users\user\.ivy2\cache\org.scala-sbt\main\jars\main-0.13.13.jar -> sbt.Keys$
C:\Users\user\.ivy2\cache\org.scala-sbt\sbt\jars\sbt-0.13.13.jar -> sbt.package$
C:\Users\user\.ivy2\cache\org.scala-sbt\task-system\jars\task-system-0.13.13.jar -> sbt.Task
C:\Users\user\.ivy2\cache\org.scala-sbt\tasks\jars\tasks-0.13.13.jar -> sbt.Inc
C:\Users\user\.ivy2\cache\org.scalastyle\scalastyle_2.10\jars\scalastyle_2.10-0.3.2.jar -> org.scalastyle.Output
C:\Users\user\.ivy2\cache\org.scalaz\scalaz-core_2.10\jars\scalaz-core_2.10-6.0.4.jar -> scalaz.Scalaz$
C:\Users\user\.ivy2\cache\scala_2.10\sbt_0.13\com.typesafe.sbteclipse\sbteclipse-core\jars\sbteclipse-core-2.2.0.jar -> com.typesafe.sbteclipse.core.EclipsePlugin
C:\Users\user\.ivy2\cache\scala_2.10\sbt_0.13\com.typesafe.sbteclipse\sbteclipse-plugin\jars\sbteclipse-plugin-2.2.0.jar -> com.typesafe.sbteclipse.plugin.EclipsePlugin$
C:\Users\user\.sbt\boot\scala-2.10.6\lib\scala-library.jar -> scala.Tuple2$
internal apis:
8 items
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> 

C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwWI0DWgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAmc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwa1oi23QABm5vdGlmeXNxAH4ADJ+ti8Z0AAR3YWl0c3EAfgAMub9kNXQAEXRlc3RDb21waWxlRmFpbGVkc3EAfgAMjali9HQADSRhc0luc3RhbmNlT2ZzcQB+AAwfvm8idAAGZXF1YWxzc3EAfgAMoSMIXXQADHBlcmZlY3RTdHlsZXNxAH4ADNgfglh0ABN0ZXN0RXhlY3V0aW9uRmFpbGVkc3EAfgAMWFFHCHQADGFzSW5zdGFuY2VPZnNxAH4ADPjir9B0AAxtYXhUZXN0U2NvcmVzcQB+AAzWmugddAAMc3luY2hyb25pemVkc3EAfgAMCu0ux3QADSRpc0luc3RhbmNlT2ZzcQB+AAx3h32QdAANbWF4U3R5bGVTY29yZXNxAH4ADDjdl2R0AA5mZWVkYmFja1N0cmluZ3NxAH4ADEkgtzJ0AAlub3RpZnlBbGxzcQB+AAxTyLnKdAAOYWxsVGVzdHNQYXNzZWRzcQB+AAw27esRdAAKaW5pdGlhbGl6ZXNxAH4ADMq2lm50AAxpc0luc3RhbmNlT2ZzcQB+AAzGS8LrdAAIYXBpU3RhdGVzcQB+AAxX2NtfdAANY29tcGlsZUZhaWxlZHNxAH4ADAlhx7l0ABRkb3dubG9hZFVucGFja0ZhaWxlZHNxAH4ADIACHZd0ABV0ZXN0RXhlY3V0aW9uRGVidWdMb2dzcQB+AAy+d0AXdAAPR3JhZGluZ0ZlZWRiYWNrc3EAfgAMUtxH23QADXN0eWxlUHJvYmxlbXNzcQB+AAzEI/SpdAAKdG90YWxTY29yZXNxAH4ADJetZBt0AAI9PXNxAH4ADHaEP0Z0AAVjbG9uZXNxAH4ADPp9jKB0AAtzZXRNYXhTY29yZXNxAH4ADOsYch50AAh0b1N0cmluZ3NxAH4ADBhgDJ90AAIhPXNxAH4ADEPzktN0AAhnZXRDbGFzc3NxAH4ADC+BjEN0AAJuZXNxAH4ADIM2uhJ0AAhpc0ZhaWxlZHNxAH4ADPyzn7x0ABhmZWVkYmFja1N0cmluZyRkZWZhdWx0JDJzcQB+AAyytQYJdAACZXFzcQB+AAy2z3MBdAACIyNzcQB+AAz2mjWedAAIZmluYWxpemVzcQB+AAx9z3DEdAAIaGFzaENvZGVzcQB+AAyCOrDDdAALdGVzdHNGYWlsZWRzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBjeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAcQB+ADl1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AHpzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AY0wACWluaGVyaXRlZHEAfgBjTAAHcGFyZW50c3EAfgBjeHEAfgB/c3EAfgB6dXEAfgBeAAAAAHNxAH4AenVxAH4AXgAAAABzcQB+AHp1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AH50AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AH5zcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AJd0AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AJhzcQB+AIt0AANBbnlzcQB+AI9zcQB+AJJ1cQB+AJUAAAACc3EAfgCXdAAFc2NhbGFxAH4AnnVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAAc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAGRyr2PDHVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AHJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XHRhcmdldFxzY2FsYS0yLjEwXHNidC0wLjEzXGNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABTT0aPOQoNlBCrijAocyGm/dMSgMA==
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw2OXO1AAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAABqc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwc210kXQADnJlYWRDb21waWxlTG9nc3EAfgAMEqhIkXQAEXByb2plY3REZXRhaWxzTWFwc3EAfgAM/iszR3QABm5vdGlmeXNxAH4ADP1Ukj90ABRjcmVhdGVIYW5kb3V0U2V0dGluZ3NxAH4ADMtckRF0AAxQcm9nRnVuQnVpbGRzcQB+AAzDcUnYdAARc2VsZWN0TWFpblNvdXJjZXNzcQB+AAzl8M4bdAAEd2FpdHNxAH4ADGgHHEp0AAhtYXhTY29yZXNxAH4ADKOwKlZ0AAlzY2FsYVRlc3RzcQB+AAyr1bwcdAAVc2V0VGVzdFByb3BlcnRpZXNIb29rc3EAfgAMTCSilnQAEXNlbGVjdFRlc3RTb3VyY2Vzc3EAfgAMnxAYzHQADmNvcHkkZGVmYXVsdCQyc3EAfgAMn5AAOXQADSRhc0luc3RhbmNlT2ZzcQB+AAzA8RB0dAAOY29weSRkZWZhdWx0JDVzcQB+AAz2jn6ddAAMYnVpbGRMb2FkZXJzc3EAfgAMORsHvXQACGNvdXJzZUlkc3EAfgAMwXkzCHQAGmdyYWRlUHJvamVjdERldGFpbHNTZXR0aW5nc3EAfgAMMWFezXQAEXN1Ym1pdFByb2plY3ROYW1lc3EAfgAMSrpim3QADHByb2R1Y3RBcml0eXNxAH4ADLkT9IJ0AAZlcXVhbHNzcQB+AAwUK+MHdAAMZ3JhZGVTZXR0aW5nc3EAfgAM4xkXTHQAD3N0eWxlU2NvcmVSYXRpb3NxAH4ADFApbTV0AA1jcmVhdGVIYW5kb3V0c3EAfgAMxtK4DXQAFGdldFN1Ym1pc3Npb25TZXR0aW5nc3EAfgAM99I7mHQADXN1Ym1pdFNvdXJjZXNzcQB+AAytBTGHdAALZ3JhZGluZ1VVSURzcQB+AAxYXT/vdAAMYXNJbnN0YW5jZU9mc3EAfgAM6H21TXQAEnByb2plY3REZWZpbml0aW9uc3NxAH4ADAaOUiZ0AAxoYW5kb3V0RmlsZXNzcQB+AAxKK2UfdAAPc2V0TWF4U2NvcmVIb29rc3EAfgAMBPIfwXQAEnNldE1heFNjb3JlU2V0dGluZ3NxAH4ADMfZzVZ0ABJmYWlsRG93bmxvYWRVbnBhY2tzcQB+AAwr+1QOdAAMc3luY2hyb25pemVkc3EAfgAM3pM6LnQADSRpc0luc3RhbmNlT2ZzcQB+AAwNx70AdAAMcHJvamVjdEZpbGVzc3EAfgAMN4n/yHQADmN1cnJlbnRQcm9qZWN0c3EAfgAMqKlio3QAC3BhY2thZ2VOYW1lc3EAfgAMna5pUnQAGHNldFRlc3RQcm9wZXJ0aWVzU2V0dGluZ3NxAH4ADKdTsCx0AAhjYW5FcXVhbHNxAH4ADCjJ97B0AAZzdWJtaXRzcQB+AAyxSlkJdAAOY29weSRkZWZhdWx0JDRzcQB+AAw8WPSLdAAOUHJvamVjdERldGFpbHNzcQB+AAxiR7YydAAZc2VsZWN0UmVzb3VyY2VzRm9yUHJvamVjdHNxAH4ADCrvES50AA1wcm9kdWN0UHJlZml4c3EAfgAMcBiRBnQABmFwaUtleXNxAH4ADDxthoJ0AAlub3RpZnlBbGxzcQB+AAy0rDiedAANc3VibWl0U2V0dGluZ3NxAH4ADL+/Y8N0AAtyb290UHJvamVjdHNxAH4ADDIVe9l0ABdzdWJtaXNzaW9uTG9nZ2VyU2V0dGluZ3NxAH4ADJWR/Cl0AAxpc0luc3RhbmNlT2ZzcQB+AAwlybQAdAASaW5pdEdyYWRpbmdTZXR0aW5nc3EAfgAMdevdcXQABmZpbHRlcnNxAH4ADBHhPnB0ABBhc3NpZ25tZW50UGFydElkc3EAfgAMX/o3VnQAEXNldFRlc3RQcm9wZXJ0aWVzc3EAfgAM5xTtUHQABjxpbml0PnNxAH4ADA2mZ5B0AA1jb21waWxlRmFpbGVkc3EAfgAMtkqcaXQAEWdldFN1Ym1pc3Npb25Ib29rc3EAfgAMLQFKKnQACnN0eWxlQ2hlY2tzcQB+AAzn0WTXdAATZ3JhZGVQcm9qZWN0RGV0YWlsc3NxAH4ADJRUTKl0ABFjb21waWxlVGVzdEZhaWxlZHNxAH4ADPr4Vvx0ABpzY2FsYVRlc3RTdWJtaXNzaW9uU2V0dGluZ3NxAH4ADBEZ3F90ABNjb3BpZWRSZXNvdXJjZUZpbGVzc3EAfgAMEBMm43QAGXRlc3RTb3VyY2VzRnJvbUFzc2lnbm1lbnRzcQB+AAx4ccjIdAAFZ3JhZGVzcQB+AAy9CZeJdAAUY29tbW9uU291cmNlUGFja2FnZXNzcQB+AAwFZmHCdAANZ2V0U3VibWlzc2lvbnNxAH4ADE2XWUN0AAI9PXNxAH4ADC/MvWp0ABFzdWJtaXNzaW9uUHJvamVjdHNxAH4ADFDQB+F0AAVjbG9uZXNxAH4ADKpel1V0AAtzZXRNYXhTY29yZXNxAH4ADAlJ0op0ABFhc3NpZ25tZW50UHJvamVjdHNxAH4ADDkNmbF0AAYkaW5pdCRzcQB+AAxiscnCdAAWcGFja2FnZVN1Ym1pc3Npb25GaWxlc3NxAH4ADFK3RLR0ABNzY2FsYVRlc3RTdWJtaXNzaW9uc3EAfgAMfFzv5XQAFnBhcnRJZE9mR3JhZGluZ1Byb2plY3RzcQB+AAwswAfVdAARcGFja2FnZVN1Ym1pc3Npb25zcQB+AAzAEye9dAAOY29weSRkZWZhdWx0JDNzcQB+AAxOMkyqdAAEY29weXNxAH4ADGLADU50ABNncmFkaW5nVGVzdFBhY2thZ2Vzc3EAfgAMjHiWAXQACHRvU3RyaW5nc3EAfgAMu56IWXQAAiE9c3EAfgAMEna1mXQAEnJlYWRUZXN0Q29tcGlsZUxvZ3NxAH4ADD+E6Dp0AAtkZWxldGVGaWxlc3NxAH4ADKLDJ650AAhwcm9qZWN0c3NxAH4ADBQ2Iv90ABdyZXNvdXJjZXNGcm9tQXNzaWdubWVudHNxAH4ADMBIJGN0AAhnZXRDbGFzc3NxAH4ADB9nz5x0AA5jb3B5JGRlZmF1bHQkMXNxAH4ADO6T2pl0AAtpbml0R3JhZGluZ3NxAH4ADGawsnl0ABVzZWxlY3RUZXN0c0ZvclByb2plY3RzcQB+AAwog9HjdAALcmVjaXRhdGlvbnNzcQB+AAyJRH6odAACbmVzcQB+AAxgEZuwdAAUc3R5bGVDaGVja1N1Ym1pc3Npb25zcQB+AAyvOv5MdAAPZ3JhZGluZ0NvdXJzZUlkc3EAfgAMus27a3QADWhhbmRsZUZhaWx1cmVzcQB+AAyCu8rbdAARc3R5bGVDaGVja1NldHRpbmdzcQB+AAx6inurdAACZXFzcQB+AAwlufmjdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAMJTIW5HQAF3JlYWRBbmRVbnBhY2tTdWJtaXNzaW9uc3EAfgAM7jNLTnQACHNldHRpbmdzc3EAfgAMxxjH4HQACmZhaWxTdWJtaXRzcQB+AAwAfNI1dAACIyNzcQB+AAxHlA+mdAAIZmluYWxpemVzcQB+AAwK3S4wdAAOcHJvZHVjdEVsZW1lbnRzcQB+AAxkBpPMdAAIaGFzaENvZGVzcQB+AAymEvojdAAbc3R5bGVDaGVja1N1Ym1pc3Npb25TZXR0aW5nc3EAfgAM0sPMIXQAEHNjYWxhVGVzdFNldHRpbmdzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAACc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgDreHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAcQB+ABd1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AQJzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4A60wACWluaGVyaXRlZHEAfgDrTAAHcGFyZW50c3EAfgDreHEAfgEHc3EAfgECdXEAfgDmAAAAAHNxAH4BAnVxAH4A5gAAAABzcQB+AQJ1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAA3NyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AQZ0AAVCdWlsZHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4BBnNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAADc2J0c3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+ASBzcQB+ARN0AAZPYmplY3RzcQB+ARdzcQB+ARp1cQB+AR0AAAADc3EAfgEfdAAEamF2YXNxAH4BH3QABGxhbmdxAH4BJHNxAH4BE3QAA0FueXNxAH4BF3NxAH4BGnVxAH4BHQAAAAJzcQB+AR90AAVzY2FsYXEAfgEkc3EAfgDocQB+APV1cQB+APYAAAAAc3EAfgD4AHEAfgBhdXEAfgD6AAAAAH5xAH4A/HQACENsYXNzRGVmdXEAfgEAAAAAAHNxAH4BAnEAfgEIc3EAfgECc3EAfgEKc3EAfgECdXEAfgDmAAAAAHNxAH4BAnVxAH4A5gAAAABzcQB+AQJ1cQB+AREAAAAGc3EAfgETdAAMU2VyaWFsaXphYmxlc3EAfgEXc3EAfgEadXEAfgEdAAAAAnNxAH4BH3EAfgE0cQB+ASRzcQB+ARNxAH4BRnNxAH4BF3NxAH4BGnVxAH4BHQAAAANzcQB+AR9xAH4BK3NxAH4BH3QAAmlvcQB+ASRzcQB+ARN0AAdQcm9kdWN0cQB+AUdzcQB+ARN0AAZFcXVhbHNxAH4BR3NxAH4BE3EAfgEmc3EAfgEXc3EAfgEadXEAfgEdAAAAA3NxAH4BH3EAfgErc3EAfgEfcQB+AS1xAH4BJHNxAH4BE3EAfgEvcQB+AUd1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABkcq9jwx1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAByQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFx0YXJnZXRcc2NhbGEtMi4xMFxzYnQtMC4xM1xjbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAU4/fYUskcPBGazlWKsttmI63yYrA=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwBec9iAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAhc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwbPw3t3QABm5vdGlmeXNxAH4ADMYUUq50AAdzdWNjZXNzc3EAfgAMcNTKHHQABHdhaXRzcQB+AAzPTbJgdAANJGFzSW5zdGFuY2VPZnNxAH4ADLHH21t0AAV0cmFjZXNxAH4ADISTlhp0ABJhbnNpQ29kZXNTdXBwb3J0ZWRzcQB+AAwwtpgddAAEd2FybnNxAH4ADF1/sLN0AAloYXNFcnJvcnNzcQB+AAyokdaRdAAHdmVyYm9zZXNxAH4ADAFJExF0AAZlcXVhbHNzcQB+AAyRN6f1dAAFY2xlYXJzcQB+AAy08IbPdAAMYXNJbnN0YW5jZU9mc3EAfgAMSjMDOXQADHN5bmNocm9uaXplZHNxAH4ADD3RDBZ0AA0kaXNJbnN0YW5jZU9mc3EAfgAMhs743XQABGluZm9zcQB+AAymL9GBdAAJbm90aWZ5QWxsc3EAfgAMvxfmD3QABWRlYnVnc3EAfgAMxGbfqHQADGlzSW5zdGFuY2VPZnNxAH4ADPoJTzZ0AA9SZWNvcmRpbmdMb2dnZXJzcQB+AAyT13ctdAAMcmVhZEFuZENsZWFyc3EAfgAMqnwdiXQABWVycm9yc3EAfgAMReRDSXQAAj09c3EAfgAMl5G+jnQABWNsb25lc3EAfgAM5w4GoXQABiRpbml0JHNxAH4ADD0HMOd0AAh0b1N0cmluZ3NxAH4ADP89PqN0AAIhPXNxAH4ADKi8reF0AAhnZXRDbGFzc3NxAH4ADDvsbFN0AAJuZXNxAH4ADIJvGTF0AAJlcXNxAH4ADEcxRwR0AANsb2dzcQB+AAx5QJB2dAACIyNzcQB+AAztZSQVdAAIZmluYWxpemVzcQB+AAz6T6kddAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBZeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAcQB+ADN1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AHBzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AWUwACWluaGVyaXRlZHEAfgBZTAAHcGFyZW50c3EAfgBZeHEAfgB1c3EAfgBwdXEAfgBUAAAAAHNxAH4AcHVxAH4AVAAAAABzcQB+AHB1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAABHNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AHR0AAZMb2dnZXJzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AHRzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAAJzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQAA3NidHNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCOc3EAfgCBdAAGTG9nZ2Vyc3EAfgCFc3EAfgCIdXEAfgCLAAAAAnNxAH4AjXQABXhzYnRpcQB+AJJzcQB+AIF0AAZPYmplY3RzcQB+AIVzcQB+AIh1cQB+AIsAAAADc3EAfgCNdAAEamF2YXNxAH4AjXQABGxhbmdxAH4AknNxAH4AgXQAA0FueXNxAH4AhXNxAH4AiHVxAH4AiwAAAAJzcQB+AI10AAVzY2FsYXEAfgCSdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAABzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAZHKvY8MdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAckM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcdGFyZ2V0XHNjYWxhLTIuMTBcc2J0LTAuMTNcY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFEsov6Hk36XeJOKz//jBFB0rOQDd
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwS7+1qwAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAFzcgAgeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2hbDvUidjhXzwIAAkkABGhhc2hMAARuYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7eHA8NmKodAANZW5yaWNoSnNWYWx1ZXVxAH4ACQAAABhzcQB+AAvKQLP6dAAGbm90aWZ5c3EAfgALdVb93HQABHdhaXRzcQB+AAvHygKqdAANJGFzSW5zdGFuY2VPZnNxAH4AC/LAPQl0AAZlcXVhbHNzcQB+AAuwiqRudAAMYXNJbnN0YW5jZU9mc3EAfgALf+Czj3QADHN5bmNocm9uaXplZHNxAH4ACw9qKht0AAFcc3EAfgALnEB+mXQADSRpc0luc3RhbmNlT2ZzcQB+AAvTWy2hdAAJbm90aWZ5QWxsc3EAfgAL8uw2lnQADGlzSW5zdGFuY2VPZnNxAH4AC7u9TT50AAY8aW5pdD5zcQB+AAuPBNRXdAALUmljaEpzVmFsdWVzcQB+AAtCUtlOdAACPT1zcQB+AAtenZOkdAAFY2xvbmVzcQB+AAt0SGI5dAALYXJyYXlWYWx1ZXNzcQB+AAvgSNM9dAAIdG9TdHJpbmdzcQB+AAsz648ldAACIT1zcQB+AAsDwcp/dAANaGFzRmllbGROYW1lZHNxAH4AC1mIdJF0AAhnZXRDbGFzc3NxAH4AC4L1PXx0AAJuZXNxAH4AC4ibYbJ0AAJlcXNxAH4AC/TBZPt0AAIjI3NxAH4ACzGVhKZ0AAhmaW5hbGl6ZXNxAH4AC16xtCl0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAJzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AEl4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgAMeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cABxAH4AJ3VyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBgc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AElMAAlpbmhlcml0ZWRxAH4ASUwAB3BhcmVudHNxAH4ASXhxAH4AZXNxAH4AYHVxAH4ARAAAAABzcQB+AGB1cQB+AEQAAAAAc3EAfgBgdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AAxMAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBkdAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBkc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADHhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgB9dAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgB+c3EAfgBxdAADQW55c3EAfgB1c3EAfgB4dXEAfgB7AAAAAnNxAH4AfXQABXNjYWxhcQB+AIRzcQB+AEZxAH4AU3VxAH4AVAAAAABzcQB+AFYAdAALUmljaEpzVmFsdWV1cQB+AFgAAAAAfnEAfgBadAAGTW9kdWxldXEAfgBeAAAAAHNxAH4AYHEAfgBmc3EAfgBgc3EAfgBoc3EAfgBgdXEAfgBEAAAAAHNxAH4AYHVxAH4ARAAAAABzcQB+AGB1cQB+AG8AAAACc3EAfgBxcQB+AHRzcQB+AHVzcQB+AHh1cQB+AHsAAAADc3EAfgB9cQB+AIBzcQB+AH1xAH4AgnEAfgCEc3EAfgBxcQB+AIZzcQB+AHVzcQB+AHh1cQB+AHsAAAACc3EAfgB9cQB+AItxAH4AhHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAAc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAGRyr2PDHVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADEwAD3NvdXJjZURpcmVjdG9yeXEAfgAMeHB0AHJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XHRhcmdldFxzY2FsYS0yLjEwXHNidC0wLjEzXGNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABSEwaDfiYNzWBn4xvFhtTMuofxFRQ==
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwB0379wAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAac3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hw+t8JdHQABm5vdGlmeXNxAH4ADNZx+S90AAR3YWl0c3EAfgAMJt6pBXQADSRhc0luc3RhbmNlT2ZzcQB+AAxndt+ZdAATTGltaXRlZFN0cmluZ0J1ZmZlcnNxAH4ADBK1b8x0AAZlcXVhbHNzcQB+AAxpsWRAdAAMYXNJbnN0YW5jZU9mc3EAfgAMmpVHTnQADHJ1blNjYWxhVGVzdHNxAH4ADO99pnJ0AAxzeW5jaHJvbml6ZWRzcQB+AAzIkMsndAANJGlzSW5zdGFuY2VPZnNxAH4ADDM2mVB0AANidWZzcQB+AAyWAOVWdAAJbm90aWZ5QWxsc3EAfgAM9JwUjXQADGlzSW5zdGFuY2VPZnNxAH4ADKVFrNx0AA5zY2FsYVRlc3RHcmFkZXNxAH4ADMWKduN0AAY8aW5pdD5zcQB+AAygFqCFdAAPU2NhbGFUZXN0UnVubmVyc3EAfgAMceFkL3QAAj09c3EAfgAMJwb32nQABWNsb25lc3EAfgAMmekoUXQACHRvU3RyaW5nc3EAfgAMuFDD23QAAiE9c3EAfgAM9sSE23QACGdldENsYXNzc3EAfgAMMQ9aVHQAAm5lc3EAfgAMsW+N9XQAAmVxc3EAfgAMBqf9G3QAAiMjc3EAfgAMZt7dHXQACGZpbmFsaXplc3EAfgAMcI8fAXQACGhhc2hDb2Rlc3EAfgAMRxZB+XQABmFwcGVuZHNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAFzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AEt4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cABxAH4AK3VyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AYnNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBLTAAJaW5oZXJpdGVkcQB+AEtMAAdwYXJlbnRzcQB+AEt4cQB+AGdzcQB+AGJ1cQB+AEYAAAAAc3EAfgBidXEAfgBGAAAAAHNxAH4AYnVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AZnQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AZnNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4Af3QABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AgHNxAH4Ac3QAA0FueXNxAH4Ad3NxAH4AenVxAH4AfQAAAAJzcQB+AH90AAVzY2FsYXEAfgCGdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAABzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAZHKvY8MdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAckM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcdGFyZ2V0XHNjYWxhLTIuMTBcc2J0LTAuMTNcY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFKUwezpXjFGQX0GifMPNLGHyE/sy
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwwFOHaAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAoc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hw93wlLHQADm1heE91dHB1dExpbmVzc3EAfgAM3fEMOnQABm5vdGlmeXNxAH4ADLpcIXp0AAhTZXR0aW5nc3NxAH4ADAR8sIl0AAR3YWl0c3EAfgAMjbmfqnQADSRhc0luc3RhbmNlT2ZzcQB+AAyVjbAadAAWc2NhbGFUZXN0RGVmYXVsdFdlaWd0aHNxAH4ADJwd8GF0AAdiYXNlVVJMc3EAfgAMFEU/Y3QABmVxdWFsc3NxAH4ADD0ZA4d0ABVzdWJtaXNzaW9uSmFyRmlsZU5hbWVzcQB+AAxwcka6dAAbc2NhbGFUZXN0UmVwb3J0RmlsZVByb3BlcnR5c3EAfgAMXRZ4x3QADGFzSW5zdGFuY2VPZnNxAH4ADDOc2K10AAxzeW5jaHJvbml6ZWRzcQB+AAyjjLJ/dAANJGlzSW5zdGFuY2VPZnNxAH4ADN6rVwN0AAlzdWJtaXRVcmxzcQB+AAxRMeRndAATdGVzdFJlc3VsdHNGaWxlTmFtZXNxAH4ADPerymt0AAlub3RpZnlBbGxzcQB+AAyFXEgCdAALb2ZmbGluZU1vZGVzcQB+AAzz81bqdAAec2NhbGFUZXN0UmVhZGFibGVGaWxlc1Byb3BlcnR5c3EAfgAMKbjOD3QADGlzSW5zdGFuY2VPZnNxAH4ADFwkml10ACZzY2FsYVRlc3RJbmRpdmlkdWFsVGVzdFRpbWVvdXRQcm9wZXJ0eXNxAH4ADH7e9Zl0ABF1cGxvYWRGZWVkYmFja1VybHNxAH4ADJ/1oq10ABNtYXhPdXRwdXRMaW5lTGVuZ3Roc3EAfgAMA0SkoHQAAj09c3EAfgAM09jp8HQABWNsb25lc3EAfgAMgqe0tnQAFnN1Ym1pc3Npb25Kc29uRmlsZU5hbWVzcQB+AAyw5GzJdAAMY2hhbGxlbmdlVXJsc3EAfgAMAMWZKXQAFWluZGl2aWR1YWxUZXN0VGltZW91dHNxAH4ADIchIlF0ABFtYXhTdWJtaXRGaWxlU2l6ZXNxAH4ADF3pkb50AAh0b1N0cmluZ3NxAH4ADKh9B3t0AA5wb2xpY3lGaWxlTmFtZXNxAH4ADAf7XC10AAIhPXNxAH4ADO91S8l0AAhnZXRDbGFzc3NxAH4ADK3KWhp0ABFzdWJtaXNzaW9uRGlyTmFtZXNxAH4ADOOGpD50AB5zY2FsYVRlc3REZWZhdWx0V2VpZ3RoUHJvcGVydHlzcQB+AAyrNAo6dAAQc2NhbGFUZXN0VGltZW91dHNxAH4ADN1xJyJ0AAJuZXNxAH4ADDkpUhF0AAJlcXNxAH4ADNl3oMF0AAIjI3NxAH4ADETFA2d0AAhmaW5hbGl6ZXNxAH4ADLXBz790AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAFzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AGd4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cABxAH4AE3VyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AfnNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBnTAAJaW5oZXJpdGVkcQB+AGdMAAdwYXJlbnRzcQB+AGd4cQB+AINzcQB+AH51cQB+AGIAAAAAc3EAfgB+dXEAfgBiAAAAAHNxAH4AfnVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AgnQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AgnNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4Am3QABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AnHNxAH4Aj3QAA0FueXNxAH4Ak3NxAH4AlnVxAH4AmQAAAAJzcQB+AJt0AAVzY2FsYXEAfgCidXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAABzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAZHKvY8MdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAckM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcdGFyZ2V0XHNjYWxhLTIuMTBcc2J0LTAuMTNcY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFFurXVUyd9llAoGyxBEUxXDF9OTl
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwpXmOGwAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAec3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwxhGZPXQABm5vdGlmeXNxAH4ADAEBzrx0AAR3YWl0c3EAfgAMReDKAnQADSRhc0luc3RhbmNlT2ZzcQB+AAzEM6NtdAAGZXF1YWxzc3EAfgAMfBsbIXQADGFzSW5zdGFuY2VPZnNxAH4ADPlntxx0AAxzeW5jaHJvbml6ZWRzcQB+AAzqS+Z1dAAFc2NvcmVzcQB+AAzvDFjvdAANJGlzSW5zdGFuY2VPZnNxAH4ADDm4A3N0AAtlYWNoTWVzc2FnZXNxAH4ADNq4ZWl0AAlub3RpZnlBbGxzcQB+AAzZUrWxdAAMaXNJbnN0YW5jZU9mc3EAfgAMqozU6nQACW1heFJlc3VsdHNxAH4ADLf8Z4F0AAY8aW5pdD5zcQB+AAxeTfJ7dAAJZmlsZUNvdW50c3EAfgAM4H5eAnQAAj09c3EAfgAMxEfgoHQABmFzc2Vzc3NxAH4ADHo0SXZ0AAVjbG9uZXNxAH4ADOZvSoZ0AAYkaW5pdCRzcQB+AAwh0c+xdAAHbWVzc2FnZXNxAH4ADJjayQ50AAh0b1N0cmluZ3NxAH4ADKYogRR0AAIhPXNxAH4ADEBzEaZ0AAxTdHlsZUNoZWNrZXJzcQB+AAwup0/kdAAIZ2V0Q2xhc3NzcQB+AAz9phuLdAAGb3V0cHV0c3EAfgAMDUBjW3QAAm5lc3EAfgAM5Gr7pnQAAmVxc3EAfgAM5ezUynQAAiMjc3EAfgAM0XsSHHQACGZpbmFsaXplc3EAfgAM6YMArXQACGhhc2hDb2Rlc3EAfgAMw3p7JXQAEEN1c3RvbVRleHRPdXRwdXRzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBTeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAcQB+ADl1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AGpzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AU0wACWluaGVyaXRlZHEAfgBTTAAHcGFyZW50c3EAfgBTeHEAfgBvc3EAfgBqdXEAfgBOAAAAAHNxAH4AanVxAH4ATgAAAABzcQB+AGp1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AG50AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AG5zcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AId0AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AIhzcQB+AHt0AANBbnlzcQB+AH9zcQB+AIJ1cQB+AIUAAAACc3EAfgCHdAAFc2NhbGFxAH4AjnVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAAc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAGRyr2PDHVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AHJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XHRhcmdldFxzY2FsYS0yLjEwXHNidC0wLjEzXGNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQplflgLNwe11Kh1mBwiGLjD7/xiQ==
external apis:
0 items
source infos:
8 items
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\CourseraHttp.scala -> 
AAAAAAAAAAA=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\GradingFeedback.scala -> 
AAAAAAAAAAA=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ProgFunBuild.scala -> 
AAAARAAAAQAAAHUAPCAgbGF6eSB2YWwgc3VibWl0U2V0dGluZyA9IHN1Ym1pdCA8PD0gaW5wdXRUYXNrIHsgYXJnVGFzayA9PgEAABIqAQAAACIBACIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQCdYDw8PWAgb3BlcmF0b3IgaXMgZGVwcmVjYXRlZC4gVXNlIGBrZXkgOj0geyB4LnZhbHVlIH1gIG9yIGBrZXkgfj0gKG9sZCA9PiB7IG5ld1ZhbHVlIH0pYC4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAADOAEogIGxhenkgdmFsIGNyZWF0ZUhhbmRvdXRTZXR0aW5nID0gY3JlYXRlSGFuZG91dCA8PD0gaW5wdXRUYXNrIHsgYXJnVGFzayA9PgEAACJFAQAAADABADAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAJ1gPDw9YCBvcGVyYXRvciBpcyBkZXByZWNhdGVkLiBVc2UgYGtleSA6PSB7IHgudmFsdWUgfWAgb3IgYGtleSB+PSAob2xkID0+IHsgbmV3VmFsdWUgfSlgLgpTZWUgaHR0cDovL3d3dy5zY2FsYS1zYnQub3JnLzAuMTMvZG9jcy9NaWdyYXRpbmctZnJvbS1zYnQtMDEyeC5odG1sAQAAAQAAADYAUSAgICAodW5tYW5hZ2VkU291cmNlRGlyZWN0b3JpZXMgaW4gQ29tcGlsZSkgPDw9IChzY2FsYVNvdXJjZSBpbiBDb21waWxlKShTZXEoXykpLAEAAAhMAQAAACwBACwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEAnWA8PD1gIG9wZXJhdG9yIGlzIGRlcHJlY2F0ZWQuIFVzZSBga2V5IDo9IHsgeC52YWx1ZSB9YCBvciBga2V5IH49IChvbGQgPT4geyBuZXdWYWx1ZSB9KWAuClNlZSBodHRwOi8vd3d3LnNjYWxhLXNidC5vcmcvMC4xMy9kb2NzL01pZ3JhdGluZy1mcm9tLXNidC0wMTJ4Lmh0bWwBAAABAAAANwBLICAgICh1bm1hbmFnZWRTb3VyY2VEaXJlY3RvcmllcyBpbiBUZXN0KSA8PD0gKHNjYWxhU291cmNlIGluIFRlc3QpKFNlcShfKSksAQAACJsBAAAAKQEAKSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQCdYDw8PWAgb3BlcmF0b3IgaXMgZGVwcmVjYXRlZC4gVXNlIGBrZXkgOj0geyB4LnZhbHVlIH1gIG9yIGBrZXkgfj0gKG9sZCA9PiB7IG5ld1ZhbHVlIH0pYC4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAESAN0gICAgKHVubWFuYWdlZFNvdXJjZXMgaW4gQ29tcGlsZSkgPDw9ICh1bm1hbmFnZWRTb3VyY2VzIGluIENvbXBpbGUsIHNjYWxhU291cmNlIGluIENvbXBpbGUsIHByb2plY3REZXRhaWxzTWFwLCBjdXJyZW50UHJvamVjdCwgY29tbW9uU291cmNlUGFja2FnZXMpIG1hcCB7IChzb3VyY2VzLCBzcmNNYWluU2NhbGFEaXIsIGRldGFpbHNNYXAsIHByb2plY3ROYW1lLCBjb21tb25TcmNzKSA9PgEAAC5VAQAAACIBACIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQCdYDw8PWAgb3BlcmF0b3IgaXMgZGVwcmVjYXRlZC4gVXNlIGBrZXkgOj0geyB4LnZhbHVlIH1gIG9yIGBrZXkgfj0gKG9sZCA9PiB7IG5ld1ZhbHVlIH0pYC4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAESAN0gICAgKHVubWFuYWdlZFNvdXJjZXMgaW4gQ29tcGlsZSkgPDw9ICh1bm1hbmFnZWRTb3VyY2VzIGluIENvbXBpbGUsIHNjYWxhU291cmNlIGluIENvbXBpbGUsIHByb2plY3REZXRhaWxzTWFwLCBjdXJyZW50UHJvamVjdCwgY29tbW9uU291cmNlUGFja2FnZXMpIG1hcCB7IChzb3VyY2VzLCBzcmNNYWluU2NhbGFEaXIsIGRldGFpbHNNYXAsIHByb2plY3ROYW1lLCBjb21tb25TcmNzKSA9PgEAAC5VAQAAACIBACIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQCdYDw8PWAgb3BlcmF0b3IgaXMgZGVwcmVjYXRlZC4gVXNlIGBrZXkgOj0geyB4LnZhbHVlIH1gIG9yIGBrZXkgfj0gKG9sZCA9PiB7IG5ld1ZhbHVlIH0pYC4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAEcANQgICAgKHVubWFuYWdlZFNvdXJjZXMgaW4gVGVzdCkgPDw9ICh1bm1hbmFnZWRTb3VyY2VzIGluIFRlc3QsIHNjYWxhU291cmNlIGluIFRlc3QsIHByb2plY3REZXRhaWxzTWFwLCBjdXJyZW50UHJvamVjdCwgZ3JhZGluZ1Rlc3RQYWNrYWdlcykgbWFwIHsgKHNvdXJjZXMsIHNyY1Rlc3RTY2FsYURpciwgZGV0YWlsc01hcCwgcHJvamVjdE5hbWUsIGdyYWRpbmdTcmNzKSA9PgEAADBZAQAAAB8BAB8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQCdYDw8PWAgb3BlcmF0b3IgaXMgZGVwcmVjYXRlZC4gVXNlIGBrZXkgOj0geyB4LnZhbHVlIH1gIG9yIGBrZXkgfj0gKG9sZCA9PiB7IG5ld1ZhbHVlIH0pYC4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAEcANQgICAgKHVubWFuYWdlZFNvdXJjZXMgaW4gVGVzdCkgPDw9ICh1bm1hbmFnZWRTb3VyY2VzIGluIFRlc3QsIHNjYWxhU291cmNlIGluIFRlc3QsIHByb2plY3REZXRhaWxzTWFwLCBjdXJyZW50UHJvamVjdCwgZ3JhZGluZ1Rlc3RQYWNrYWdlcykgbWFwIHsgKHNvdXJjZXMsIHNyY1Rlc3RTY2FsYURpciwgZGV0YWlsc01hcCwgcHJvamVjdE5hbWUsIGdyYWRpbmdTcmNzKSA9PgEAADBZAQAAAB8BAB8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQCdYDw8PWAgb3BlcmF0b3IgaXMgZGVwcmVjYXRlZC4gVXNlIGBrZXkgOj0geyB4LnZhbHVlIH1gIG9yIGBrZXkgfj0gKG9sZCA9PiB7IG5ld1ZhbHVlIH0pYC4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAFBACYgIHZhbCBzY2FsYVRlc3RTZXR0aW5nID0gc2NhbGFUZXN0IDw8PQEAADYqAQAAACMBACMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEAnWA8PD1gIG9wZXJhdG9yIGlzIGRlcHJlY2F0ZWQuIFVzZSBga2V5IDo9IHsgeC52YWx1ZSB9YCBvciBga2V5IH49IChvbGQgPT4geyBuZXdWYWx1ZSB9KWAuClNlZSBodHRwOi8vd3d3LnNjYWxhLXNidC5vcmcvMC4xMy9kb2NzL01pZ3JhdGluZy1mcm9tLXNidC0wMTJ4Lmh0bWwBAAABAAABQQAmICB2YWwgc2NhbGFUZXN0U2V0dGluZyA9IHNjYWxhVGVzdCA8PD0BAAA2KgEAAAAjAQAjICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAJ1gPDw9YCBvcGVyYXRvciBpcyBkZXByZWNhdGVkLiBVc2UgYGtleSA6PSB7IHgudmFsdWUgfWAgb3IgYGtleSB+PSAob2xkID0+IHsgbmV3VmFsdWUgfSlgLgpTZWUgaHR0cDovL3d3dy5zY2FsYS1zYnQub3JnLzAuMTMvZG9jcy9NaWdyYXRpbmctZnJvbS1zYnQtMDEyeC5odG1sAQAAAQAAAVsAdyAgdmFsIHN0eWxlQ2hlY2tTZXR0aW5nID0gc3R5bGVDaGVjayA8PD0gKGNvbXBpbGUgaW4gQ29tcGlsZSwgc291cmNlcyBpbiBDb21waWxlLCBzdHJlYW1zKSBtYXAgeyAoXywgc291cmNlRmlsZXMsIHMpID0+AQAAOkwBAAAAJQEAJSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAJ1gPDw9YCBvcGVyYXRvciBpcyBkZXByZWNhdGVkLiBVc2UgYGtleSA6PSB7IHgudmFsdWUgfWAgb3IgYGtleSB+PSAob2xkID0+IHsgbmV3VmFsdWUgfSlgLgpTZWUgaHR0cDovL3d3dy5zY2FsYS1zYnQub3JnLzAuMTMvZG9jcy9NaWdyYXRpbmctZnJvbS1zYnQtMDEyeC5odG1sAQAAAQAAAVsAdyAgdmFsIHN0eWxlQ2hlY2tTZXR0aW5nID0gc3R5bGVDaGVjayA8PD0gKGNvbXBpbGUgaW4gQ29tcGlsZSwgc291cmNlcyBpbiBDb21waWxlLCBzdHJlYW1zKSBtYXAgeyAoXywgc291cmNlRmlsZXMsIHMpID0+AQAAOkwBAAAAJQEAJSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAJ1gPDw9YCBvcGVyYXRvciBpcyBkZXByZWNhdGVkLiBVc2UgYGtleSA6PSB7IHgudmFsdWUgfWAgb3IgYGtleSB+PSAob2xkID0+IHsgbmV3VmFsdWUgfSlgLgpTZWUgaHR0cDovL3d3dy5zY2FsYS1zYnQub3JnLzAuMTMvZG9jcy9NaWdyYXRpbmctZnJvbS1zYnQtMDEyeC5odG1sAQAAAQAAATMAXCAgdmFsIHNldFRlc3RQcm9wZXJ0aWVzSG9vayA9ICh0ZXN0IGluIFRlc3QpIDw8PSAodGVzdCBpbiBUZXN0KS5kZXBlbmRzT24oc2V0VGVzdFByb3BlcnRpZXMpAQAANGoBAAAALQEALSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEAnWA8PD1gIG9wZXJhdG9yIGlzIGRlcHJlY2F0ZWQuIFVzZSBga2V5IDo9IHsgeC52YWx1ZSB9YCBvciBga2V5IH49IChvbGQgPT4geyBuZXdWYWx1ZSB9KWAuClNlZSBodHRwOi8vd3d3LnNjYWxhLXNidC5vcmcvMC4xMy9kb2NzL01pZ3JhdGluZy1mcm9tLXNidC0wMTJ4Lmh0bWwBAAABAAABMwBcICB2YWwgc2V0VGVzdFByb3BlcnRpZXNIb29rID0gKHRlc3QgaW4gVGVzdCkgPDw9ICh0ZXN0IGluIFRlc3QpLmRlcGVuZHNPbihzZXRUZXN0UHJvcGVydGllcykBAAA0agEAAAAtAQAtICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQCdYDw8PWAgb3BlcmF0b3IgaXMgZGVwcmVjYXRlZC4gVXNlIGBrZXkgOj0geyB4LnZhbHVlIH1gIG9yIGBrZXkgfj0gKG9sZCA9PiB7IG5ld1ZhbHVlIH0pYC4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAFpAC8gICAgdmVyc2lvbiA8PD0gKHZlcnNpb24gaW4gYXNzaWdubWVudFByb2plY3QpLAEAADyAAQAAAAwBAAwgICAgICAgICAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAJ1gPDw9YCBvcGVyYXRvciBpcyBkZXByZWNhdGVkLiBVc2UgYGtleSA6PSB7IHgudmFsdWUgfWAgb3IgYGtleSB+PSAob2xkID0+IHsgbmV3VmFsdWUgfSlgLgpTZWUgaHR0cDovL3d3dy5zY2FsYS1zYnQub3JnLzAuMTMvZG9jcy9NaWdyYXRpbmctZnJvbS1zYnQtMDEyeC5odG1sAQAAAQAAAWoAKSAgICBuYW1lIDw8PSAobmFtZSBpbiBhc3NpZ25tZW50UHJvamVjdCksAQAAPK0BAAAACQEACSAgICAgICAgIAEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEAnWA8PD1gIG9wZXJhdG9yIGlzIGRlcHJlY2F0ZWQuIFVzZSBga2V5IDo9IHsgeC52YWx1ZSB9YCBvciBga2V5IH49IChvbGQgPT4geyBuZXdWYWx1ZSB9KWAuClNlZSBodHRwOi8vd3d3LnNjYWxhLXNidC5vcmcvMC4xMy9kb2NzL01pZ3JhdGluZy1mcm9tLXNidC0wMTJ4Lmh0bWwBAAABAAABawA5ICAgIHNjYWxhVmVyc2lvbiA8PD0gKHNjYWxhVmVyc2lvbiBpbiBhc3NpZ25tZW50UHJvamVjdCksAQAAPN8BAAAAEQEAESAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQCdYDw8PWAgb3BlcmF0b3IgaXMgZGVwcmVjYXRlZC4gVXNlIGBrZXkgOj0geyB4LnZhbHVlIH1gIG9yIGBrZXkgfj0gKG9sZCA9PiB7IG5ld1ZhbHVlIH0pYC4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAFsADsgICAgc2NhbGFjT3B0aW9ucyA8PD0gKHNjYWxhY09wdGlvbnMgaW4gYXNzaWdubWVudFByb2plY3QpLAEAAD0aAQAAABIBABIgICAgICAgICAgICAgICAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAJ1gPDw9YCBvcGVyYXRvciBpcyBkZXByZWNhdGVkLiBVc2UgYGtleSA6PSB7IHgudmFsdWUgfWAgb3IgYGtleSB+PSAob2xkID0+IHsgbmV3VmFsdWUgfSlgLgpTZWUgaHR0cDovL3d3dy5zY2FsYS1zYnQub3JnLzAuMTMvZG9jcy9NaWdyYXRpbmctZnJvbS1zYnQtMDEyeC5odG1sAQAAAQAAAW0ARyAgICBsaWJyYXJ5RGVwZW5kZW5jaWVzIDw8PSAobGlicmFyeURlcGVuZGVuY2llcyBpbiBhc3NpZ25tZW50UHJvamVjdCksAQAAPVwBAAAAGAEAGCAgICAgICAgICAgICAgICAgICAgICAgIAEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEAnWA8PD1gIG9wZXJhdG9yIGlzIGRlcHJlY2F0ZWQuIFVzZSBga2V5IDo9IHsgeC52YWx1ZSB9YCBvciBga2V5IH49IChvbGQgPT4geyBuZXdWYWx1ZSB9KWAuClNlZSBodHRwOi8vd3d3LnNjYWxhLXNidC5vcmcvMC4xMy9kb2NzL01pZ3JhdGluZy1mcm9tLXNidC0wMTJ4Lmh0bWwBAAABAAABbgA7ICAgIHVubWFuYWdlZEJhc2UgPDw9ICh1bm1hbmFnZWRCYXNlIGluIGFzc2lnbm1lbnRQcm9qZWN0KSwBAAA9ngEAAAASAQASICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQCdYDw8PWAgb3BlcmF0b3IgaXMgZGVwcmVjYXRlZC4gVXNlIGBrZXkgOj0geyB4LnZhbHVlIH1gIG9yIGBrZXkgfj0gKG9sZCA9PiB7IG5ld1ZhbHVlIH0pYC4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAGyAH8gIGxhenkgdmFsIGluaXRHcmFkaW5nU2V0dGluZyA9IGluaXRHcmFkaW5nIDw8PSAoY2xlYW4sIHNvdXJjZURpcmVjdG9yeSwgYmFzZURpcmVjdG9yeSkgbWFwIHsgKF8sIHN1Ym1pc3Npb25TcmNEaXIsIGJhc2VkaXIpID0+AQAAR5IBAAAALAEALCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQCdYDw8PWAgb3BlcmF0b3IgaXMgZGVwcmVjYXRlZC4gVXNlIGBrZXkgOj0geyB4LnZhbHVlIH1gIG9yIGBrZXkgfj0gKG9sZCA9PiB7IG5ld1ZhbHVlIH0pYC4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAGyAH8gIGxhenkgdmFsIGluaXRHcmFkaW5nU2V0dGluZyA9IGluaXRHcmFkaW5nIDw8PSAoY2xlYW4sIHNvdXJjZURpcmVjdG9yeSwgYmFzZURpcmVjdG9yeSkgbWFwIHsgKF8sIHN1Ym1pc3Npb25TcmNEaXIsIGJhc2VkaXIpID0+AQAAR5IBAAAALAEALCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQCdYDw8PWAgb3BlcmF0b3IgaXMgZGVwcmVjYXRlZC4gVXNlIGBrZXkgOj0geyB4LnZhbHVlIH1gIG9yIGBrZXkgfj0gKG9sZCA9PiB7IG5ld1ZhbHVlIH0pYC4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAHFANAgIGxhenkgdmFsIGdyYWRlUHJvamVjdERldGFpbHNTZXR0aW5nID0gZ3JhZGVQcm9qZWN0RGV0YWlscyA8PD0gKGluaXRHcmFkaW5nLCBncmFkaW5nQ291cnNlSWQsIHBhcnRJZE9mR3JhZGluZ1Byb2plY3QsIHByb2plY3REZXRhaWxzTWFwIGluIGFzc2lnbm1lbnRQcm9qZWN0KSBtYXAgeyAoXywgZ3JhZGluZ0NvdXJzZUlkLCBwYXJ0SWQsIGRldGFpbHNNYXApID0+AQAASsABAAAAPAEAPCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEAnWA8PD1gIG9wZXJhdG9yIGlzIGRlcHJlY2F0ZWQuIFVzZSBga2V5IDo9IHsgeC52YWx1ZSB9YCBvciBga2V5IH49IChvbGQgPT4geyBuZXdWYWx1ZSB9KWAuClNlZSBodHRwOi8vd3d3LnNjYWxhLXNidC5vcmcvMC4xMy9kb2NzL01pZ3JhdGluZy1mcm9tLXNidC0wMTJ4Lmh0bWwBAAABAAABxQDQICBsYXp5IHZhbCBncmFkZVByb2plY3REZXRhaWxzU2V0dGluZyA9IGdyYWRlUHJvamVjdERldGFpbHMgPDw9IChpbml0R3JhZGluZywgZ3JhZGluZ0NvdXJzZUlkLCBwYXJ0SWRPZkdyYWRpbmdQcm9qZWN0LCBwcm9qZWN0RGV0YWlsc01hcCBpbiBhc3NpZ25tZW50UHJvamVjdCkgbWFwIHsgKF8sIGdyYWRpbmdDb3Vyc2VJZCwgcGFydElkLCBkZXRhaWxzTWFwKSA9PgEAAErAAQAAADwBADwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAJ1gPDw9YCBvcGVyYXRvciBpcyBkZXByZWNhdGVkLiBVc2UgYGtleSA6PSB7IHgudmFsdWUgfWAgb3IgYGtleSB+PSAob2xkID0+IHsgbmV3VmFsdWUgfSlgLgpTZWUgaHR0cDovL3d3dy5zY2FsYS1zYnQub3JnLzAuMTMvZG9jcy9NaWdyYXRpbmctZnJvbS1zYnQtMDEyeC5odG1sAQAAAQAAAdsAUSAgdmFsIHNldE1heFNjb3JlU2V0dGluZyA9IHNldE1heFNjb3JlIDw8PSAoZ3JhZGVQcm9qZWN0RGV0YWlscykgbWFwIHsgcHJvamVjdCA9PgEAAE93AQAAACcBACcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAJ1gPDw9YCBvcGVyYXRvciBpcyBkZXByZWNhdGVkLiBVc2UgYGtleSA6PSB7IHgudmFsdWUgfWAgb3IgYGtleSB+PSAob2xkID0+IHsgbmV3VmFsdWUgfSlgLgpTZWUgaHR0cDovL3d3dy5zY2FsYS1zYnQub3JnLzAuMTMvZG9jcy9NaWdyYXRpbmctZnJvbS1zYnQtMDEyeC5odG1sAQAAAQAAAdsAUSAgdmFsIHNldE1heFNjb3JlU2V0dGluZyA9IHNldE1heFNjb3JlIDw8PSAoZ3JhZGVQcm9qZWN0RGV0YWlscykgbWFwIHsgcHJvamVjdCA9PgEAAE93AQAAACcBACcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAJ1gPDw9YCBvcGVyYXRvciBpcyBkZXByZWNhdGVkLiBVc2UgYGtleSA6PSB7IHgudmFsdWUgfWAgb3IgYGtleSB+PSAob2xkID0+IHsgbmV3VmFsdWUgfSlgLgpTZWUgaHR0cDovL3d3dy5zY2FsYS1zYnQub3JnLzAuMTMvZG9jcy9NaWdyYXRpbmctZnJvbS1zYnQtMDEyeC5odG1sAQAAAQAAAeAAXCAgdmFsIHNldE1heFNjb3JlSG9vayA9IChjb21waWxlIGluIENvbXBpbGUpIDw8PSAoY29tcGlsZSBpbiBDb21waWxlKS5kZXBlbmRzT24oc2V0TWF4U2NvcmUpAQAAUF4BAAAALQEALSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEAnWA8PD1gIG9wZXJhdG9yIGlzIGRlcHJlY2F0ZWQuIFVzZSBga2V5IDo9IHsgeC52YWx1ZSB9YCBvciBga2V5IH49IChvbGQgPT4geyBuZXdWYWx1ZSB9KWAuClNlZSBodHRwOi8vd3d3LnNjYWxhLXNidC5vcmcvMC4xMy9kb2NzL01pZ3JhdGluZy1mcm9tLXNidC0wMTJ4Lmh0bWwBAAABAAAB4ABcICB2YWwgc2V0TWF4U2NvcmVIb29rID0gKGNvbXBpbGUgaW4gQ29tcGlsZSkgPDw9IChjb21waWxlIGluIENvbXBpbGUpLmRlcGVuZHNPbihzZXRNYXhTY29yZSkBAABQXgEAAAAtAQAtICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQCdYDw8PWAgb3BlcmF0b3IgaXMgZGVwcmVjYXRlZC4gVXNlIGBrZXkgOj0geyB4LnZhbHVlIH1gIG9yIGBrZXkgfj0gKG9sZCA9PiB7IG5ld1ZhbHVlIH0pYC4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAHoAHYgIHZhbCBnZXRTdWJtaXNzaW9uU2V0dGluZyA9IGdldFN1Ym1pc3Npb24gPDw9IChiYXNlRGlyZWN0b3J5LCBzY2FsYVNvdXJjZSBpbiBDb21waWxlKSBtYXAgeyAoYmFzZURpciwgc2NhbGFTcmNEaXIpID0+AQAAUWIBAAAAKwEAKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAJ1gPDw9YCBvcGVyYXRvciBpcyBkZXByZWNhdGVkLiBVc2UgYGtleSA6PSB7IHgudmFsdWUgfWAgb3IgYGtleSB+PSAob2xkID0+IHsgbmV3VmFsdWUgfSlgLgpTZWUgaHR0cDovL3d3dy5zY2FsYS1zYnQub3JnLzAuMTMvZG9jcy9NaWdyYXRpbmctZnJvbS1zYnQtMDEyeC5odG1sAQAAAQAAAegAdiAgdmFsIGdldFN1Ym1pc3Npb25TZXR0aW5nID0gZ2V0U3VibWlzc2lvbiA8PD0gKGJhc2VEaXJlY3RvcnksIHNjYWxhU291cmNlIGluIENvbXBpbGUpIG1hcCB7IChiYXNlRGlyLCBzY2FsYVNyY0RpcikgPT4BAABRYgEAAAArAQArICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEAnWA8PD1gIG9wZXJhdG9yIGlzIGRlcHJlY2F0ZWQuIFVzZSBga2V5IDo9IHsgeC52YWx1ZSB9YCBvciBga2V5IH49IChvbGQgPT4geyBuZXdWYWx1ZSB9KWAuClNlZSBodHRwOi8vd3d3LnNjYWxhLXNidC5vcmcvMC4xMy9kb2NzL01pZ3JhdGluZy1mcm9tLXNidC0wMTJ4Lmh0bWwBAAABAAACDwByICB2YWwgZ2V0U3VibWlzc2lvbkhvb2sgPSAodW5tYW5hZ2VkU291cmNlcyBpbiBDb21waWxlKSA8PD0gKHVubWFuYWdlZFNvdXJjZXMgaW4gQ29tcGlsZSkuZGVwZW5kc09uKGdldFN1Ym1pc3Npb24pAQAAVqgBAAAAOAEAOCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQCdYDw8PWAgb3BlcmF0b3IgaXMgZGVwcmVjYXRlZC4gVXNlIGBrZXkgOj0geyB4LnZhbHVlIH1gIG9yIGBrZXkgfj0gKG9sZCA9PiB7IG5ld1ZhbHVlIH0pYC4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAIPAHIgIHZhbCBnZXRTdWJtaXNzaW9uSG9vayA9ICh1bm1hbmFnZWRTb3VyY2VzIGluIENvbXBpbGUpIDw8PSAodW5tYW5hZ2VkU291cmNlcyBpbiBDb21waWxlKS5kZXBlbmRzT24oZ2V0U3VibWlzc2lvbikBAABWqAEAAAA4AQA4ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAJ1gPDw9YCBvcGVyYXRvciBpcyBkZXByZWNhdGVkLiBVc2UgYGtleSA6PSB7IHgudmFsdWUgfWAgb3IgYGtleSB+PSAob2xkID0+IHsgbmV3VmFsdWUgfSlgLgpTZWUgaHR0cDovL3d3dy5zY2FsYS1zYnQub3JnLzAuMTMvZG9jcy9NaWdyYXRpbmctZnJvbS1zYnQtMDEyeC5odG1sAQAAAQAAAiIAZiAgdmFsIHJlYWRDb21waWxlTG9nID0gKGNvbXBpbGUgaW4gQ29tcGlsZSkgPDw9IChjb21waWxlIGluIENvbXBpbGUpIG1hcFIgaGFuZGxlRmFpbHVyZShjb21waWxlRmFpbGVkKQEAAFk0AQAAACwBACwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEAnWA8PD1gIG9wZXJhdG9yIGlzIGRlcHJlY2F0ZWQuIFVzZSBga2V5IDo9IHsgeC52YWx1ZSB9YCBvciBga2V5IH49IChvbGQgPT4geyBuZXdWYWx1ZSB9KWAuClNlZSBodHRwOi8vd3d3LnNjYWxhLXNidC5vcmcvMC4xMy9kb2NzL01pZ3JhdGluZy1mcm9tLXNidC0wMTJ4Lmh0bWwBAAABAAACIgBmICB2YWwgcmVhZENvbXBpbGVMb2cgPSAoY29tcGlsZSBpbiBDb21waWxlKSA8PD0gKGNvbXBpbGUgaW4gQ29tcGlsZSkgbWFwUiBoYW5kbGVGYWlsdXJlKGNvbXBpbGVGYWlsZWQpAQAAWTQBAAAALAEALCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQCdYDw8PWAgb3BlcmF0b3IgaXMgZGVwcmVjYXRlZC4gVXNlIGBrZXkgOj0geyB4LnZhbHVlIH1gIG9yIGBrZXkgfj0gKG9sZCA9PiB7IG5ld1ZhbHVlIH0pYC4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAIjAGggIHZhbCByZWFkVGVzdENvbXBpbGVMb2cgPSAoY29tcGlsZSBpbiBUZXN0KSA8PD0gKGNvbXBpbGUgaW4gVGVzdCkgbWFwUiBoYW5kbGVGYWlsdXJlKGNvbXBpbGVUZXN0RmFpbGVkKQEAAFmcAQAAAC0BAC0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAJ1gPDw9YCBvcGVyYXRvciBpcyBkZXByZWNhdGVkLiBVc2UgYGtleSA6PSB7IHgudmFsdWUgfWAgb3IgYGtleSB+PSAob2xkID0+IHsgbmV3VmFsdWUgfSlgLgpTZWUgaHR0cDovL3d3dy5zY2FsYS1zYnQub3JnLzAuMTMvZG9jcy9NaWdyYXRpbmctZnJvbS1zYnQtMDEyeC5odG1sAQAAAQAAAiMAaCAgdmFsIHJlYWRUZXN0Q29tcGlsZUxvZyA9IChjb21waWxlIGluIFRlc3QpIDw8PSAoY29tcGlsZSBpbiBUZXN0KSBtYXBSIGhhbmRsZUZhaWx1cmUoY29tcGlsZVRlc3RGYWlsZWQpAQAAWZwBAAAALQEALSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEAnWA8PD1gIG9wZXJhdG9yIGlzIGRlcHJlY2F0ZWQuIFVzZSBga2V5IDo9IHsgeC52YWx1ZSB9YCBvciBga2V5IH49IChvbGQgPT4geyBuZXdWYWx1ZSB9KWAuClNlZSBodHRwOi8vd3d3LnNjYWxhLXNidC5vcmcvMC4xMy9kb2NzL01pZ3JhdGluZy1mcm9tLXNidC0wMTJ4Lmh0bWwBAAABAAACPQBaICAgIChyZXNvdXJjZURpcmVjdG9yeSBpbiBDb21waWxlKSA8PD0gKHJlc291cmNlRGlyZWN0b3J5IGluIChhc3NpZ25tZW50UHJvamVjdCwgQ29tcGlsZSkpAQAAXP8BAAAAIwEAIyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQCdYDw8PWAgb3BlcmF0b3IgaXMgZGVwcmVjYXRlZC4gVXNlIGBrZXkgOj0geyB4LnZhbHVlIH1gIG9yIGBrZXkgfj0gKG9sZCA9PiB7IG5ld1ZhbHVlIH0pYC4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAJEAKggICAgKHJlc291cmNlcyBpbiBDb21waWxlKSA8PD0gKHJlc291cmNlcyBpbiBDb21waWxlLCByZXNvdXJjZURpcmVjdG9yeSBpbiAoYXNzaWdubWVudFByb2plY3QsIENvbXBpbGUpLCBncmFkZVByb2plY3REZXRhaWxzKSBtYXAgeyAocmVzb3VyY2VzLCByZXNvdXJjZURpciwgcHJvamVjdCkgPT4BAABd5QEAAAAbAQAbICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQCdYDw8PWAgb3BlcmF0b3IgaXMgZGVwcmVjYXRlZC4gVXNlIGBrZXkgOj0geyB4LnZhbHVlIH1gIG9yIGBrZXkgfj0gKG9sZCA9PiB7IG5ld1ZhbHVlIH0pYC4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAJEAKggICAgKHJlc291cmNlcyBpbiBDb21waWxlKSA8PD0gKHJlc291cmNlcyBpbiBDb21waWxlLCByZXNvdXJjZURpcmVjdG9yeSBpbiAoYXNzaWdubWVudFByb2plY3QsIENvbXBpbGUpLCBncmFkZVByb2plY3REZXRhaWxzKSBtYXAgeyAocmVzb3VyY2VzLCByZXNvdXJjZURpciwgcHJvamVjdCkgPT4BAABd5QEAAAAbAQAbICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQCdYDw8PWAgb3BlcmF0b3IgaXMgZGVwcmVjYXRlZC4gVXNlIGBrZXkgOj0geyB4LnZhbHVlIH1gIG9yIGBrZXkgfj0gKG9sZCA9PiB7IG5ld1ZhbHVlIH0pYC4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAJMAFAgICAgKHNvdXJjZURpcmVjdG9yeSBpbiBUZXN0KSA8PD0gKHNvdXJjZURpcmVjdG9yeSBpbiAoYXNzaWdubWVudFByb2plY3QsIFRlc3QpKQEAAF90AQAAAB4BAB4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAJ1gPDw9YCBvcGVyYXRvciBpcyBkZXByZWNhdGVkLiBVc2UgYGtleSA6PSB7IHgudmFsdWUgfWAgb3IgYGtleSB+PSAob2xkID0+IHsgbmV3VmFsdWUgfSlgLgpTZWUgaHR0cDovL3d3dy5zY2FsYS1zYnQub3JnLzAuMTMvZG9jcy9NaWdyYXRpbmctZnJvbS1zYnQtMDEyeC5odG1sAQAAAQAAAlQA4CAgICAodW5tYW5hZ2VkU291cmNlcyBpbiBUZXN0KSA8PD0gKHVubWFuYWdlZFNvdXJjZXMgaW4gVGVzdCwgc2NhbGFTb3VyY2UgaW4gKGFzc2lnbm1lbnRQcm9qZWN0LCBUZXN0KSwgZ3JhZGluZ1Rlc3RQYWNrYWdlcyBpbiBhc3NpZ25tZW50UHJvamVjdCwgZ3JhZGVQcm9qZWN0RGV0YWlscykgbWFwIHsgKHNvdXJjZXMsIHRlc3RTcmNTY2FsYURpciwgZ3JhZGluZ1NyY3MsIHByb2plY3QpID0+AQAAYJoBAAAAHwEAHyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAJ1gPDw9YCBvcGVyYXRvciBpcyBkZXByZWNhdGVkLiBVc2UgYGtleSA6PSB7IHgudmFsdWUgfWAgb3IgYGtleSB+PSAob2xkID0+IHsgbmV3VmFsdWUgfSlgLgpTZWUgaHR0cDovL3d3dy5zY2FsYS1zYnQub3JnLzAuMTMvZG9jcy9NaWdyYXRpbmctZnJvbS1zYnQtMDEyeC5odG1sAQAAAQAAAlQA4CAgICAodW5tYW5hZ2VkU291cmNlcyBpbiBUZXN0KSA8PD0gKHVubWFuYWdlZFNvdXJjZXMgaW4gVGVzdCwgc2NhbGFTb3VyY2UgaW4gKGFzc2lnbm1lbnRQcm9qZWN0LCBUZXN0KSwgZ3JhZGluZ1Rlc3RQYWNrYWdlcyBpbiBhc3NpZ25tZW50UHJvamVjdCwgZ3JhZGVQcm9qZWN0RGV0YWlscykgbWFwIHsgKHNvdXJjZXMsIHRlc3RTcmNTY2FsYURpciwgZ3JhZGluZ1NyY3MsIHByb2plY3QpID0+AQAAYJoBAAAAHwEAHyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAJ1gPDw9YCBvcGVyYXRvciBpcyBkZXByZWNhdGVkLiBVc2UgYGtleSA6PSB7IHgudmFsdWUgfWAgb3IgYGtleSB+PSAob2xkID0+IHsgbmV3VmFsdWUgfSlgLgpTZWUgaHR0cDovL3d3dy5zY2FsYS1zYnQub3JnLzAuMTMvZG9jcy9NaWdyYXRpbmctZnJvbS1zYnQtMDEyeC5odG1sAQAAAQAAAlsAOiAgdmFsIHNjYWxhVGVzdFN1Ym1pc3Npb25TZXR0aW5nID0gc2NhbGFUZXN0U3VibWlzc2lvbiA8PD0BAABiSgEAAAA3AQA3ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEAnWA8PD1gIG9wZXJhdG9yIGlzIGRlcHJlY2F0ZWQuIFVzZSBga2V5IDo9IHsgeC52YWx1ZSB9YCBvciBga2V5IH49IChvbGQgPT4geyBuZXdWYWx1ZSB9KWAuClNlZSBodHRwOi8vd3d3LnNjYWxhLXNidC5vcmcvMC4xMy9kb2NzL01pZ3JhdGluZy1mcm9tLXNidC0wMTJ4Lmh0bWwBAAABAAACWwA6ICB2YWwgc2NhbGFUZXN0U3VibWlzc2lvblNldHRpbmcgPSBzY2FsYVRlc3RTdWJtaXNzaW9uIDw8PQEAAGJKAQAAADcBADcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQCdYDw8PWAgb3BlcmF0b3IgaXMgZGVwcmVjYXRlZC4gVXNlIGBrZXkgOj0geyB4LnZhbHVlIH1gIG9yIGBrZXkgfj0gKG9sZCA9PiB7IG5ld1ZhbHVlIH0pYC4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAJ1AIAgIHZhbCBzdHlsZUNoZWNrU3VibWlzc2lvblNldHRpbmcgPSBzdHlsZUNoZWNrU3VibWlzc2lvbiA8PD0gKHNvdXJjZXMgaW4gQ29tcGlsZSwgc2NhbGFUZXN0U3VibWlzc2lvbikgbWFwIHsgKHNvdXJjZUZpbGVzLCBfKSA9PgEAAGaLAQAAADkBADkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAJ1gPDw9YCBvcGVyYXRvciBpcyBkZXByZWNhdGVkLiBVc2UgYGtleSA6PSB7IHgudmFsdWUgfWAgb3IgYGtleSB+PSAob2xkID0+IHsgbmV3VmFsdWUgfSlgLgpTZWUgaHR0cDovL3d3dy5zY2FsYS1zYnQub3JnLzAuMTMvZG9jcy9NaWdyYXRpbmctZnJvbS1zYnQtMDEyeC5odG1sAQAAAQAAAnUAgCAgdmFsIHN0eWxlQ2hlY2tTdWJtaXNzaW9uU2V0dGluZyA9IHN0eWxlQ2hlY2tTdWJtaXNzaW9uIDw8PSAoc291cmNlcyBpbiBDb21waWxlLCBzY2FsYVRlc3RTdWJtaXNzaW9uKSBtYXAgeyAoc291cmNlRmlsZXMsIF8pID0+AQAAZosBAAAAOQEAOSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEAnWA8PD1gIG9wZXJhdG9yIGlzIGRlcHJlY2F0ZWQuIFVzZSBga2V5IDo9IHsgeC52YWx1ZSB9YCBvciBga2V5IH49IChvbGQgPT4geyBuZXdWYWx1ZSB9KWAuClNlZSBodHRwOi8vd3d3LnNjYWxhLXNidC5vcmcvMC4xMy9kb2NzL01pZ3JhdGluZy1mcm9tLXNidC0wMTJ4Lmh0bWwBAAABAAACiACyICB2YWwgZ3JhZGVTZXR0aW5nID0gZ3JhZGUgPDw9IChncmFkaW5nVVVJRCwgc2NhbGFUZXN0U3VibWlzc2lvbiwgc3R5bGVDaGVja1N1Ym1pc3Npb24sIGFwaUtleSwgZ3JhZGVQcm9qZWN0RGV0YWlscywgc3RyZWFtcykgbWFwUiB7ICh1dWlkUiwgXywgXywgYXBpS2V5UiwgcHJvamVjdERldGFpbHNSLCBzKSA9PgEAAGj5AQAAABsBABsgICAgICAgICAgICAgICAgICAgICAgICAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAJ1gPDw9YCBvcGVyYXRvciBpcyBkZXByZWNhdGVkLiBVc2UgYGtleSA6PSB7IHgudmFsdWUgfWAgb3IgYGtleSB+PSAob2xkID0+IHsgbmV3VmFsdWUgfSlgLgpTZWUgaHR0cDovL3d3dy5zY2FsYS1zYnQub3JnLzAuMTMvZG9jcy9NaWdyYXRpbmctZnJvbS1zYnQtMDEyeC5odG1sAQAAAQAAAogAsiAgdmFsIGdyYWRlU2V0dGluZyA9IGdyYWRlIDw8PSAoZ3JhZGluZ1VVSUQsIHNjYWxhVGVzdFN1Ym1pc3Npb24sIHN0eWxlQ2hlY2tTdWJtaXNzaW9uLCBhcGlLZXksIGdyYWRlUHJvamVjdERldGFpbHMsIHN0cmVhbXMpIG1hcFIgeyAodXVpZFIsIF8sIF8sIGFwaUtleVIsIHByb2plY3REZXRhaWxzUiwgcykgPT4BAABo+QEAAAAbAQAbICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQCdYDw8PWAgb3BlcmF0b3IgaXMgZGVwcmVjYXRlZC4gVXNlIGBrZXkgOj0geyB4LnZhbHVlIH1gIG9yIGBrZXkgfj0gKG9sZCA9PiB7IG5ld1ZhbHVlIH0pYC4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAApACNvYmplY3QgUHJvZ0Z1bkJ1aWxkIGV4dGVuZHMgQnVpbGQgewEAAAXhAQAAABwBABwgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQBBdHJhaXQgQnVpbGQgaW4gcGFja2FnZSBzYnQgaXMgZGVwcmVjYXRlZDogVXNlIC5zYnQgZm9ybWF0IGluc3RlYWQBAAABAAAAdQA8ICBsYXp5IHZhbCBzdWJtaXRTZXR0aW5nID0gc3VibWl0IDw8PSBpbnB1dFRhc2sgeyBhcmdUYXNrID0+AQAAEi4BAAAAJgEAJiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQBubWV0aG9kIGlucHV0VGFzayBpbiB0cmFpdCBCdWlsZENvbW1vbiBpcyBkZXByZWNhdGVkOiBVc2UgRGVmLmlucHV0VGFzayB3aXRoIHRoZSBgRGVmLnNwYWNlRGVsaW1pdGVkKClgIHBhcnNlci4BAAABAAAAdgDLICAgIChhcmdUYXNrLCBjb21waWxlIGluIENvbXBpbGUsIGN1cnJlbnRQcm9qZWN0LCAocGFja2FnZVN1Ym1pc3Npb24gaW4gQ29tcGlsZSksIHN1Ym1pdFByb2plY3ROYW1lLCBwcm9qZWN0RGV0YWlsc01hcCwgc3RyZWFtcykgbWFwIHsgKGFyZ3MsIF8sIGN1cnJlbnRQcm9qZWN0LCBzb3VyY2VzSmFyLCBwcm9qZWN0TmFtZSwgZGV0YWlsc01hcCwgcykgPT4BAAASSQEAAAAEAQAEICAgIAEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEA9G1ldGhvZCB0N1RvVGFibGU3IGluIG9iamVjdCBTY29wZWQgaXMgZGVwcmVjYXRlZDogVGhlIHNidCAwLjEwIHN0eWxlIERTTCBpcyBkZXByZWNhdGVkOiAnKGsxLCBrMikgbWFwIHsgKHgsIHkpID0+IC4uLiB9JyBzaG91bGQgbm93IGJlICd7IHZhbCB4ID0gazEudmFsdWU7IHZhbCB5ID0gazIudmFsdWUgfScuClNlZSBodHRwOi8vd3d3LnNjYWxhLXNidC5vcmcvMC4xMy9kb2NzL01pZ3JhdGluZy1mcm9tLXNidC0wMTJ4Lmh0bWwBAAABAAAAzgBKICBsYXp5IHZhbCBjcmVhdGVIYW5kb3V0U2V0dGluZyA9IGNyZWF0ZUhhbmRvdXQgPDw9IGlucHV0VGFzayB7IGFyZ1Rhc2sgPT4BAAAiSQEAAAA0AQA0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEAbm1ldGhvZCBpbnB1dFRhc2sgaW4gdHJhaXQgQnVpbGRDb21tb24gaXMgZGVwcmVjYXRlZDogVXNlIERlZi5pbnB1dFRhc2sgd2l0aCB0aGUgYERlZi5zcGFjZURlbGltaXRlZCgpYCBwYXJzZXIuAQAAAQAAAM8A2CAgICAoYXJnVGFzaywgY3VycmVudFByb2plY3QsIGJhc2VEaXJlY3RvcnksIGhhbmRvdXRGaWxlcywgc3VibWl0UHJvamVjdE5hbWUsIHRhcmdldCwgcHJvamVjdERldGFpbHNNYXAsIGNvbXBpbGUgaW4gVGVzdCkgbWFwIHsgKGFyZ3MsIGN1cnJlbnRQcm9qZWN0LCBiYXNlZGlyLCBmaWxlc0ZpbmRlciwgc3VibWl0UHJvamVjdCwgdGFyZ2V0RGlyLCBkZXRhaWxzTWFwLCBfKSA9PgEAACJkAQAAAAQBAAQgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQD0bWV0aG9kIHQ4VG9UYWJsZTggaW4gb2JqZWN0IFNjb3BlZCBpcyBkZXByZWNhdGVkOiBUaGUgc2J0IDAuMTAgc3R5bGUgRFNMIGlzIGRlcHJlY2F0ZWQ6ICcoazEsIGsyKSBtYXAgeyAoeCwgeSkgPT4gLi4uIH0nIHNob3VsZCBub3cgYmUgJ3sgdmFsIHggPSBrMS52YWx1ZTsgdmFsIHkgPSBrMi52YWx1ZSB9Jy4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAADXAFIgICAgICAgICAgZGVmIHdpdGhSZWxhdGl2ZU5hbWVzKGZzOiBTZXFbRmlsZV0pID0gZnMueF8hKHJlbGF0aXZlVG8oYmFzZWRpcikpIG1hcCB7AQAAJaYBAAAANAEANCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhADdtZXRob2QgeF8hIGluIGNsYXNzIFBhdGhGaW5kZXIgaXMgZGVwcmVjYXRlZDogVXNlIHBhaXIuAQAAAQAAARIA3SAgICAodW5tYW5hZ2VkU291cmNlcyBpbiBDb21waWxlKSA8PD0gKHVubWFuYWdlZFNvdXJjZXMgaW4gQ29tcGlsZSwgc2NhbGFTb3VyY2UgaW4gQ29tcGlsZSwgcHJvamVjdERldGFpbHNNYXAsIGN1cnJlbnRQcm9qZWN0LCBjb21tb25Tb3VyY2VQYWNrYWdlcykgbWFwIHsgKHNvdXJjZXMsIHNyY01haW5TY2FsYURpciwgZGV0YWlsc01hcCwgcHJvamVjdE5hbWUsIGNvbW1vblNyY3MpID0+AQAALlkBAAAAJgEAJiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQD0bWV0aG9kIHQ1VG9UYWJsZTUgaW4gb2JqZWN0IFNjb3BlZCBpcyBkZXByZWNhdGVkOiBUaGUgc2J0IDAuMTAgc3R5bGUgRFNMIGlzIGRlcHJlY2F0ZWQ6ICcoazEsIGsyKSBtYXAgeyAoeCwgeSkgPT4gLi4uIH0nIHNob3VsZCBub3cgYmUgJ3sgdmFsIHggPSBrMS52YWx1ZTsgdmFsIHkgPSBrMi52YWx1ZSB9Jy4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAEcANQgICAgKHVubWFuYWdlZFNvdXJjZXMgaW4gVGVzdCkgPDw9ICh1bm1hbmFnZWRTb3VyY2VzIGluIFRlc3QsIHNjYWxhU291cmNlIGluIFRlc3QsIHByb2plY3REZXRhaWxzTWFwLCBjdXJyZW50UHJvamVjdCwgZ3JhZGluZ1Rlc3RQYWNrYWdlcykgbWFwIHsgKHNvdXJjZXMsIHNyY1Rlc3RTY2FsYURpciwgZGV0YWlsc01hcCwgcHJvamVjdE5hbWUsIGdyYWRpbmdTcmNzKSA9PgEAADBdAQAAACMBACMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEA9G1ldGhvZCB0NVRvVGFibGU1IGluIG9iamVjdCBTY29wZWQgaXMgZGVwcmVjYXRlZDogVGhlIHNidCAwLjEwIHN0eWxlIERTTCBpcyBkZXByZWNhdGVkOiAnKGsxLCBrMikgbWFwIHsgKHgsIHkpID0+IC4uLiB9JyBzaG91bGQgbm93IGJlICd7IHZhbCB4ID0gazEudmFsdWU7IHZhbCB5ID0gazIudmFsdWUgfScuClNlZSBodHRwOi8vd3d3LnNjYWxhLXNidC5vcmcvMC4xMy9kb2NzL01pZ3JhdGluZy1mcm9tLXNidC0wMTJ4Lmh0bWwBAAABAAABQgAYICAgIChjb21waWxlIGluIENvbXBpbGUsAQAANjIBAAAABAEABCAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAPRtZXRob2QgdDdUb1RhYmxlNyBpbiBvYmplY3QgU2NvcGVkIGlzIGRlcHJlY2F0ZWQ6IFRoZSBzYnQgMC4xMCBzdHlsZSBEU0wgaXMgZGVwcmVjYXRlZDogJyhrMSwgazIpIG1hcCB7ICh4LCB5KSA9PiAuLi4gfScgc2hvdWxkIG5vdyBiZSAneyB2YWwgeCA9IGsxLnZhbHVlOyB2YWwgeSA9IGsyLnZhbHVlIH0nLgpTZWUgaHR0cDovL3d3dy5zY2FsYS1zYnQub3JnLzAuMTMvZG9jcy9NaWdyYXRpbmctZnJvbS1zYnQtMDEyeC5odG1sAQAAAQAAAVsAdyAgdmFsIHN0eWxlQ2hlY2tTZXR0aW5nID0gc3R5bGVDaGVjayA8PD0gKGNvbXBpbGUgaW4gQ29tcGlsZSwgc291cmNlcyBpbiBDb21waWxlLCBzdHJlYW1zKSBtYXAgeyAoXywgc291cmNlRmlsZXMsIHMpID0+AQAAOlABAAAAKQEAKSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQD0bWV0aG9kIHQzVG9UYWJsZTMgaW4gb2JqZWN0IFNjb3BlZCBpcyBkZXByZWNhdGVkOiBUaGUgc2J0IDAuMTAgc3R5bGUgRFNMIGlzIGRlcHJlY2F0ZWQ6ICcoazEsIGsyKSBtYXAgeyAoeCwgeSkgPT4gLi4uIH0nIHNob3VsZCBub3cgYmUgJ3sgdmFsIHggPSBrMS52YWx1ZTsgdmFsIHkgPSBrMi52YWx1ZSB9Jy4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAGyAH8gIGxhenkgdmFsIGluaXRHcmFkaW5nU2V0dGluZyA9IGluaXRHcmFkaW5nIDw8PSAoY2xlYW4sIHNvdXJjZURpcmVjdG9yeSwgYmFzZURpcmVjdG9yeSkgbWFwIHsgKF8sIHN1Ym1pc3Npb25TcmNEaXIsIGJhc2VkaXIpID0+AQAAR5YBAAAAMAEAMCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEA9G1ldGhvZCB0M1RvVGFibGUzIGluIG9iamVjdCBTY29wZWQgaXMgZGVwcmVjYXRlZDogVGhlIHNidCAwLjEwIHN0eWxlIERTTCBpcyBkZXByZWNhdGVkOiAnKGsxLCBrMikgbWFwIHsgKHgsIHkpID0+IC4uLiB9JyBzaG91bGQgbm93IGJlICd7IHZhbCB4ID0gazEudmFsdWU7IHZhbCB5ID0gazIudmFsdWUgfScuClNlZSBodHRwOi8vd3d3LnNjYWxhLXNidC5vcmcvMC4xMy9kb2NzL01pZ3JhdGluZy1mcm9tLXNidC0wMTJ4Lmh0bWwBAAABAAABxQDQICBsYXp5IHZhbCBncmFkZVByb2plY3REZXRhaWxzU2V0dGluZyA9IGdyYWRlUHJvamVjdERldGFpbHMgPDw9IChpbml0R3JhZGluZywgZ3JhZGluZ0NvdXJzZUlkLCBwYXJ0SWRPZkdyYWRpbmdQcm9qZWN0LCBwcm9qZWN0RGV0YWlsc01hcCBpbiBhc3NpZ25tZW50UHJvamVjdCkgbWFwIHsgKF8sIGdyYWRpbmdDb3Vyc2VJZCwgcGFydElkLCBkZXRhaWxzTWFwKSA9PgEAAErEAQAAAEABAEAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQD0bWV0aG9kIHQ0VG9UYWJsZTQgaW4gb2JqZWN0IFNjb3BlZCBpcyBkZXByZWNhdGVkOiBUaGUgc2J0IDAuMTAgc3R5bGUgRFNMIGlzIGRlcHJlY2F0ZWQ6ICcoazEsIGsyKSBtYXAgeyAoeCwgeSkgPT4gLi4uIH0nIHNob3VsZCBub3cgYmUgJ3sgdmFsIHggPSBrMS52YWx1ZTsgdmFsIHkgPSBrMi52YWx1ZSB9Jy4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAHoAHYgIHZhbCBnZXRTdWJtaXNzaW9uU2V0dGluZyA9IGdldFN1Ym1pc3Npb24gPDw9IChiYXNlRGlyZWN0b3J5LCBzY2FsYVNvdXJjZSBpbiBDb21waWxlKSBtYXAgeyAoYmFzZURpciwgc2NhbGFTcmNEaXIpID0+AQAAUWYBAAAALwEALyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQD0bWV0aG9kIHQyVG9UYWJsZTIgaW4gb2JqZWN0IFNjb3BlZCBpcyBkZXByZWNhdGVkOiBUaGUgc2J0IDAuMTAgc3R5bGUgRFNMIGlzIGRlcHJlY2F0ZWQ6ICcoazEsIGsyKSBtYXAgeyAoeCwgeSkgPT4gLi4uIH0nIHNob3VsZCBub3cgYmUgJ3sgdmFsIHggPSBrMS52YWx1ZTsgdmFsIHkgPSBrMi52YWx1ZSB9Jy4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAIiAGYgIHZhbCByZWFkQ29tcGlsZUxvZyA9IChjb21waWxlIGluIENvbXBpbGUpIDw8PSAoY29tcGlsZSBpbiBDb21waWxlKSBtYXBSIGhhbmRsZUZhaWx1cmUoY29tcGlsZUZhaWxlZCkBAABZTQEAAABFAQBFICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQCrbWV0aG9kIG1hcFIgaW4gY2xhc3MgUmljaEluaXRUYXNrQmFzZSBpcyBkZXByZWNhdGVkOiBVc2UgdGhlIGByZXN1bHRgIG1ldGhvZCB0byBjcmVhdGUgYSB0YXNrIHRoYXQgcmV0dXJucyB0aGUgZnVsbCBSZXN1bHQgb2YgdGhpcyB0YXNrLiAgVGhlbiwgY2FsbCBgbWFwYCBvbiB0aGUgbmV3IHRhc2suAQAAAQAAAiMAaCAgdmFsIHJlYWRUZXN0Q29tcGlsZUxvZyA9IChjb21waWxlIGluIFRlc3QpIDw8PSAoY29tcGlsZSBpbiBUZXN0KSBtYXBSIGhhbmRsZUZhaWx1cmUoY29tcGlsZVRlc3RGYWlsZWQpAQAAWbIBAAAAQwEAQyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAKttZXRob2QgbWFwUiBpbiBjbGFzcyBSaWNoSW5pdFRhc2tCYXNlIGlzIGRlcHJlY2F0ZWQ6IFVzZSB0aGUgYHJlc3VsdGAgbWV0aG9kIHRvIGNyZWF0ZSBhIHRhc2sgdGhhdCByZXR1cm5zIHRoZSBmdWxsIFJlc3VsdCBvZiB0aGlzIHRhc2suICBUaGVuLCBjYWxsIGBtYXBgIG9uIHRoZSBuZXcgdGFzay4BAAABAAACRACoICAgIChyZXNvdXJjZXMgaW4gQ29tcGlsZSkgPDw9IChyZXNvdXJjZXMgaW4gQ29tcGlsZSwgcmVzb3VyY2VEaXJlY3RvcnkgaW4gKGFzc2lnbm1lbnRQcm9qZWN0LCBDb21waWxlKSwgZ3JhZGVQcm9qZWN0RGV0YWlscykgbWFwIHsgKHJlc291cmNlcywgcmVzb3VyY2VEaXIsIHByb2plY3QpID0+AQAAXekBAAAAHwEAHyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICABAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAPRtZXRob2QgdDNUb1RhYmxlMyBpbiBvYmplY3QgU2NvcGVkIGlzIGRlcHJlY2F0ZWQ6IFRoZSBzYnQgMC4xMCBzdHlsZSBEU0wgaXMgZGVwcmVjYXRlZDogJyhrMSwgazIpIG1hcCB7ICh4LCB5KSA9PiAuLi4gfScgc2hvdWxkIG5vdyBiZSAneyB2YWwgeCA9IGsxLnZhbHVlOyB2YWwgeSA9IGsyLnZhbHVlIH0nLgpTZWUgaHR0cDovL3d3dy5zY2FsYS1zYnQub3JnLzAuMTMvZG9jcy9NaWdyYXRpbmctZnJvbS1zYnQtMDEyeC5odG1sAQAAAQAAAlQA4CAgICAodW5tYW5hZ2VkU291cmNlcyBpbiBUZXN0KSA8PD0gKHVubWFuYWdlZFNvdXJjZXMgaW4gVGVzdCwgc2NhbGFTb3VyY2UgaW4gKGFzc2lnbm1lbnRQcm9qZWN0LCBUZXN0KSwgZ3JhZGluZ1Rlc3RQYWNrYWdlcyBpbiBhc3NpZ25tZW50UHJvamVjdCwgZ3JhZGVQcm9qZWN0RGV0YWlscykgbWFwIHsgKHNvdXJjZXMsIHRlc3RTcmNTY2FsYURpciwgZ3JhZGluZ1NyY3MsIHByb2plY3QpID0+AQAAYJ4BAAAAIwEAIyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQD0bWV0aG9kIHQ0VG9UYWJsZTQgaW4gb2JqZWN0IFNjb3BlZCBpcyBkZXByZWNhdGVkOiBUaGUgc2J0IDAuMTAgc3R5bGUgRFNMIGlzIGRlcHJlY2F0ZWQ6ICcoazEsIGsyKSBtYXAgeyAoeCwgeSkgPT4gLi4uIH0nIHNob3VsZCBub3cgYmUgJ3sgdmFsIHggPSBrMS52YWx1ZTsgdmFsIHkgPSBrMi52YWx1ZSB9Jy4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAEAAAJcABggICAgKGNvbXBpbGUgaW4gQ29tcGlsZSwBAABiUgEAAAAEAQAEICAgIAEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEA9G1ldGhvZCB0NlRvVGFibGU2IGluIG9iamVjdCBTY29wZWQgaXMgZGVwcmVjYXRlZDogVGhlIHNidCAwLjEwIHN0eWxlIERTTCBpcyBkZXByZWNhdGVkOiAnKGsxLCBrMikgbWFwIHsgKHgsIHkpID0+IC4uLiB9JyBzaG91bGQgbm93IGJlICd7IHZhbCB4ID0gazEudmFsdWU7IHZhbCB5ID0gazIudmFsdWUgfScuClNlZSBodHRwOi8vd3d3LnNjYWxhLXNidC5vcmcvMC4xMy9kb2NzL01pZ3JhdGluZy1mcm9tLXNidC0wMTJ4Lmh0bWwBAAABAAACdQCAICB2YWwgc3R5bGVDaGVja1N1Ym1pc3Npb25TZXR0aW5nID0gc3R5bGVDaGVja1N1Ym1pc3Npb24gPDw9IChzb3VyY2VzIGluIENvbXBpbGUsIHNjYWxhVGVzdFN1Ym1pc3Npb24pIG1hcCB7IChzb3VyY2VGaWxlcywgXykgPT4BAABmjwEAAAA9AQA9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEA9G1ldGhvZCB0MlRvVGFibGUyIGluIG9iamVjdCBTY29wZWQgaXMgZGVwcmVjYXRlZDogVGhlIHNidCAwLjEwIHN0eWxlIERTTCBpcyBkZXByZWNhdGVkOiAnKGsxLCBrMikgbWFwIHsgKHgsIHkpID0+IC4uLiB9JyBzaG91bGQgbm93IGJlICd7IHZhbCB4ID0gazEudmFsdWU7IHZhbCB5ID0gazIudmFsdWUgfScuClNlZSBodHRwOi8vd3d3LnNjYWxhLXNidC5vcmcvMC4xMy9kb2NzL01pZ3JhdGluZy1mcm9tLXNidC0wMTJ4Lmh0bWwBAAABAAACiACyICB2YWwgZ3JhZGVTZXR0aW5nID0gZ3JhZGUgPDw9IChncmFkaW5nVVVJRCwgc2NhbGFUZXN0U3VibWlzc2lvbiwgc3R5bGVDaGVja1N1Ym1pc3Npb24sIGFwaUtleSwgZ3JhZGVQcm9qZWN0RGV0YWlscywgc3RyZWFtcykgbWFwUiB7ICh1dWlkUiwgXywgXywgYXBpS2V5UiwgcHJvamVjdERldGFpbHNSLCBzKSA9PgEAAGj9AQAAAB8BAB8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBAGJDOlxjczQzNFxGdW5jdGlvbmFsIFByb2dyYW1taW5nIFByaW5jaXBsZXMgaW4gU2NhbGFcYXNzaWdubWVudHNcZXhhbXBsZVxwcm9qZWN0XFByb2dGdW5CdWlsZC5zY2FsYQD0bWV0aG9kIHQ2VG9UYWJsZTYgaW4gb2JqZWN0IFNjb3BlZCBpcyBkZXByZWNhdGVkOiBUaGUgc2J0IDAuMTAgc3R5bGUgRFNMIGlzIGRlcHJlY2F0ZWQ6ICcoazEsIGsyKSBtYXAgeyAoeCwgeSkgPT4gLi4uIH0nIHNob3VsZCBub3cgYmUgJ3sgdmFsIHggPSBrMS52YWx1ZTsgdmFsIHkgPSBrMi52YWx1ZSB9Jy4KU2VlIGh0dHA6Ly93d3cuc2NhbGEtc2J0Lm9yZy8wLjEzL2RvY3MvTWlncmF0aW5nLWZyb20tc2J0LTAxMnguaHRtbAEAAAABAAABAAABPQAMICAgIH0gdG9MaXN0AQAANc4BAAAABgEABiAgICAgIAEAYkM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUHJvZ0Z1bkJ1aWxkLnNjYWxhAQBiQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxQcm9nRnVuQnVpbGQuc2NhbGEBa3Bvc3RmaXggb3BlcmF0b3IgdG9MaXN0IHNob3VsZCBiZSBlbmFibGVkCmJ5IG1ha2luZyB0aGUgaW1wbGljaXQgdmFsdWUgc2NhbGEubGFuZ3VhZ2UucG9zdGZpeE9wcyB2aXNpYmxlLgpUaGlzIGNhbiBiZSBhY2hpZXZlZCBieSBhZGRpbmcgdGhlIGltcG9ydCBjbGF1c2UgJ2ltcG9ydCBzY2FsYS5sYW5ndWFnZS5wb3N0Zml4T3BzJwpvciBieSBzZXR0aW5nIHRoZSBjb21waWxlciBvcHRpb24gLWxhbmd1YWdlOnBvc3RmaXhPcHMuClNlZSB0aGUgU2NhbGEgZG9jcyBmb3IgdmFsdWUgc2NhbGEubGFuZ3VhZ2UucG9zdGZpeE9wcyBmb3IgYSBkaXNjdXNzaW9uCndoeSB0aGUgZmVhdHVyZSBzaG91bGQgYmUgZXhwbGljaXRseSBlbmFibGVkLgE=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RecordingLogger.scala -> 
AAAAAAAAAAA=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\RichJsValue.scala -> 
AAAAAAAAAAEAAAEAAAAbAD8gIGltcGxpY2l0IGRlZiBlbnJpY2hKc1ZhbHVlKGpzOiBKc1ZhbHVlKSA9IG5ldyBSaWNoSnNWYWx1ZShqcykBAAACeAEAAAAPAQAPICAgICAgICAgICAgICAgAQBhQzpcY3M0MzRcRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBQcmluY2lwbGVzIGluIFNjYWxhXGFzc2lnbm1lbnRzXGV4YW1wbGVccHJvamVjdFxSaWNoSnNWYWx1ZS5zY2FsYQEAYUM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcUmljaEpzVmFsdWUuc2NhbGEBoGltcGxpY2l0IGNvbnZlcnNpb24gbWV0aG9kIGVucmljaEpzVmFsdWUgc2hvdWxkIGJlIGVuYWJsZWQKYnkgbWFraW5nIHRoZSBpbXBsaWNpdCB2YWx1ZSBzY2FsYS5sYW5ndWFnZS5pbXBsaWNpdENvbnZlcnNpb25zIHZpc2libGUuClRoaXMgY2FuIGJlIGFjaGlldmVkIGJ5IGFkZGluZyB0aGUgaW1wb3J0IGNsYXVzZSAnaW1wb3J0IHNjYWxhLmxhbmd1YWdlLmltcGxpY2l0Q29udmVyc2lvbnMnCm9yIGJ5IHNldHRpbmcgdGhlIGNvbXBpbGVyIG9wdGlvbiAtbGFuZ3VhZ2U6aW1wbGljaXRDb252ZXJzaW9ucy4KU2VlIHRoZSBTY2FsYSBkb2NzIGZvciB2YWx1ZSBzY2FsYS5sYW5ndWFnZS5pbXBsaWNpdENvbnZlcnNpb25zIGZvciBhIGRpc2N1c3Npb24Kd2h5IHRoZSBmZWF0dXJlIHNob3VsZCBiZSBleHBsaWNpdGx5IGVuYWJsZWQuAQ==
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\ScalaTestRunner.scala -> 
AAAAAAAAAAA=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\Settings.scala -> 
AAAAAAAAAAA=
C:\cs434\Functional Programming Principles in Scala\assignments\example\project\StyleChecker.scala -> 
AAAAAAAAAAA=
compilations:
1 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABkcq9jwx1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAckM6XGNzNDM0XEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgUHJpbmNpcGxlcyBpbiBTY2FsYVxhc3NpZ25tZW50c1xleGFtcGxlXHByb2plY3RcdGFyZ2V0XHNjYWxhLTIuMTBcc2J0LTAuMTNcY2xhc3Nlc3QAAS8=
